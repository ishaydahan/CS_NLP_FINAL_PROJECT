$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people want to help $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people choose to volunteer to help people $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: choose
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: volunteer
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people want to help $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
getGrade :::: TEACHER :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Significant Words: 4, Teacher verified: true, syntaxable: true, aid: 597790e46b09923308466c7e
getGrade :::: STUDENT :Answer: because people want to help, Wrriten by: STUDENT, Grade: -1, Significant Words: 4, Teacher verified: false, syntaxable: false, aid: 597790e86b09923308466c80
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
equalSentences1 :::: checking people people
compare :::: passed checkTokens V people + people
compare :::: passed checkParts V people + people
compare :::: passed checkRelationToParent V people + people
equalNodes :::: equal tokens: people + people
[people - people]
equalNodes :::: there are fathers: want + want
compare :::: passed checkTokens V want + want
compare :::: passed checkParts V want + want
compare :::: passed checkRelationToParent V want + want
equalNodes :::: equal tokens: want + want
[want - want, people - people]
equalNodes :::: no father... returning true. bye
equalSentences1 :::: finished path check, equal: people people
equalSentences1 :::: checking want people
equalSentences1 :::: checking want want
compare :::: passed checkTokens V want + want
compare :::: passed checkParts V want + want
compare :::: passed checkRelationToParent V want + want
equalNodes :::: equal tokens: want + want
[want - want, people - people]
equalNodes :::: no father... returning true. bye
equalSentences1 :::: finished path check, equal: want want
equalSentences1 :::: checking to people
equalSentences1 :::: checking to want
equalSentences1 :::: checking to to
compare :::: passed checkTokens V to + to
compare :::: passed checkParts V to + to
compare :::: passed checkRelationToParent V to + to
equalNodes :::: equal tokens: to + to
[want - want, people - people, to - to]
equalNodes :::: there are fathers: help + help
compare :::: passed checkTokens V help + help
compare :::: passed checkParts V help + help
compare :::: passed checkRelationToParent V help + help
equalNodes :::: equal tokens: help + help
[help - help, want - want, people - people, to - to]
equalNodes :::: there are fathers: want + want
compare :::: passed checkTokens V want + want
compare :::: passed checkParts V want + want
compare :::: passed checkRelationToParent V want + want
equalNodes :::: equal tokens: want + want
[help - help, want - want, people - people, to - to]
equalNodes :::: no father... returning true. bye
equalSentences1 :::: finished path check, equal: to to
equalSentences1 :::: checking help people
equalSentences1 :::: checking help want
equalSentences1 :::: checking help to
equalSentences1 :::: checking help help
compare :::: passed checkTokens V help + help
compare :::: passed checkParts V help + help
compare :::: passed checkRelationToParent V help + help
equalNodes :::: equal tokens: help + help
[help - help, want - want, people - people, to - to]
equalNodes :::: there are fathers: want + want
compare :::: passed checkTokens V want + want
compare :::: passed checkParts V want + want
compare :::: passed checkRelationToParent V want + want
equalNodes :::: equal tokens: want + want
[help - help, want - want, people - people, to - to]
equalNodes :::: no father... returning true. bye
equalSentences1 :::: finished path check, equal: help help
equalSentences1 :::: TEHERE IS GRADE!!!!!!!!!!!!!!!!!!*********: because people want to help because people want to help 4
### SYNTAX ANALYZER RESULT:
### student: Answer: because people want to help, Wrriten by: STUDENT, Grade: -1, Significant Words: 4, Teacher verified: false, syntaxable: false, aid: 597790e86b09923308466c80
### grade: 100
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people love to help $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: love
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
getGrade :::: TEACHER :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Significant Words: 4, Teacher verified: true, syntaxable: true, aid: 597790e46b09923308466c7e
getGrade :::: STUDENT :Answer: because people love to help, Wrriten by: STUDENT, Grade: -1, Significant Words: 4, Teacher verified: false, syntaxable: false, aid: 597790e86b09923308466c81
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
equalSentences1 :::: checking people people
compare :::: passed checkTokens V people + people
compare :::: passed checkParts V people + people
compare :::: passed checkRelationToParent V people + people
equalNodes :::: equal tokens: people + people
[people - people]
equalNodes :::: there are fathers: want + love
