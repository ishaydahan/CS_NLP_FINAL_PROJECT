$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people want to help $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people choose to volunteer to help people. $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: choose
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: volunteer
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people want to help $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
### LEVENSHTEIN SUCSESS!
### teacher: Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
### student: Answer: because people want to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973930186c7782700f806ea
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people love to help $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: love
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
GETGRADE :::: TEACHER :Answer: because people love to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973930786c7782700f806eb
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + love
ANALYZER :::: spelling fixed: love >> want
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people want to help $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: because people want to help, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 597394d086c77804c848a08f
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking want people
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to want
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking help people
ANALYZER :::: checking help want
ANALYZER :::: checking help to
ANALYZER :::: checking help help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: help help
ANALYZER :::: grade: 4
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people want
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: checking want to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking people help
ANALYZER :::: checking want help
ANALYZER :::: checking to help
ANALYZER :::: checking help help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: help help
ANALYZER :::: grade: 4
----finished new check-----
ANALYZER :::: trick loop: to + love
ANALYZER :::: trick loop: help + love
ANALYZER :::: trick try: help + love
ANALYZER :::: not equal tokens: help + love
ANALYZER :::: checking people love
ANALYZER :::: trick loop: want + love
ANALYZER :::: trick loop: to + love
ANALYZER :::: trick loop: help + love
ANALYZER :::: not equal tokens: people + love
ANALYZER :::: checking people to
ANALYZER :::: trick loop: want + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 95
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + love
ANALYZER :::: trick loop: to + love
ANALYZER :::: trick loop: help + love
ANALYZER :::: trick try: help + love
ANALYZER :::: not equal tokens: help + love
ANALYZER :::: checking want people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: not equal tokens: help + people
ANALYZER :::: checking to people
ANALYZER :::: trick loop: help + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking help people
ANALYZER :::: not equal tokens: help + people
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 95
GETGRADE :::: TEACHER :Answer: because people love to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973930786c7782700f806eb
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + love
ANALYZER :::: trick loop: to + love
ANALYZER :::: trick loop: volunteer + love
ANALYZER :::: trick try: volunteer + love
ANALYZER :::: trick loop: to + love
ANALYZER :::: trick loop: help + love
ANALYZER :::: trick try: help + love
ANALYZER :::: trick loop: people + love
ANALYZER :::: trick try: people + love
ANALYZER :::: trick loop: . + love
ANALYZER :::: not equal tokens: people + love
ANALYZER :::: checking people love
ANALYZER :::: trick loop: choose + love
ANALYZER :::: trick loop: to + love
ANALYZER :::: trick loop: volunteer + love
ANALYZER :::: trick loop: to + love
ANALYZER :::: trick loop: help + love
ANALYZER :::: trick loop: people + love
ANALYZER :::: trick loop: . + love
ANALYZER :::: not equal tokens: people + love
ANALYZER :::: checking people to
ANALYZER :::: trick loop: choose + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + love
ANALYZER :::: trick loop: to + love
ANALYZER :::: trick loop: volunteer + love
ANALYZER :::: trick try: volunteer + love
ANALYZER :::: trick loop: to + love
ANALYZER :::: trick loop: help + love
ANALYZER :::: trick try: help + love
ANALYZER :::: trick loop: people + love
ANALYZER :::: trick try: people + love
ANALYZER :::: trick loop: . + love
ANALYZER :::: not equal tokens: people + love
ANALYZER :::: checking choose people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: volunteer + people
ANALYZER :::: trick try: volunteer + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking to people
ANALYZER :::: trick loop: volunteer + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking volunteer people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking to people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking help people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: because people love to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973930786c7782700f806eb
### grade: 95
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people choose to help $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: choose
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
GETGRADE :::: TEACHER :Answer: because people choose to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973930d86c7782700f806ec
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: trick try: help + choose
ANALYZER :::: not equal tokens: help + choose
ANALYZER :::: checking people choose
ANALYZER :::: trick loop: want + choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: not equal tokens: people + choose
ANALYZER :::: checking people to
ANALYZER :::: trick loop: want + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 95
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: trick try: help + choose
ANALYZER :::: not equal tokens: help + choose
ANALYZER :::: checking want people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: not equal tokens: help + people
ANALYZER :::: checking to people
ANALYZER :::: trick loop: help + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking help people
ANALYZER :::: not equal tokens: help + people
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 95
GETGRADE :::: TEACHER :Answer: because people choose to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973930d86c7782700f806ec
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking choose people
ANALYZER :::: checking choose choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose choose
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to choose
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: trick try: help + choose
ANALYZER :::: trick loop: people + choose
ANALYZER :::: trick try: people + choose
ANALYZER :::: trick loop: . + choose
ANALYZER :::: not equal tokens: people + choose
ANALYZER :::: checking to help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: to + help
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people choose
ANALYZER :::: trick loop: choose + choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: volunteer + choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: trick loop: people + choose
ANALYZER :::: trick loop: . + choose
ANALYZER :::: not equal tokens: people + choose
ANALYZER :::: checking choose choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose choose
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: trick loop: choose + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking choose to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick try: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick try: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: trick try: help + choose
ANALYZER :::: trick loop: people + choose
ANALYZER :::: trick try: people + choose
ANALYZER :::: trick loop: . + choose
ANALYZER :::: not equal tokens: people + choose
ANALYZER :::: checking volunteer to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick try: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: trick try: help + choose
ANALYZER :::: trick loop: people + choose
ANALYZER :::: trick try: people + choose
ANALYZER :::: trick loop: . + choose
ANALYZER :::: not equal tokens: people + choose
ANALYZER :::: checking help to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick try: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: because people choose to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973930d86c7782700f806ec
### grade: 95
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people want to halp $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: halp
ANALYZER :::: Teacher parts: VERB
### LEVENSHTEIN SUCSESS!
### teacher: Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
### student: Answer: because people want to halp, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973931486c7782700f806ed
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people wants to help $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: wants
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
### LEVENSHTEIN SUCSESS!
### teacher: Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
### student: Answer: because people wants to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973931a86c7782700f806ee
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people want to help $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
GETGRADE :::: TEACHER :Answer: people want to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973931f86c7782700f806ef
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking want people
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to want
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking help people
ANALYZER :::: checking help want
ANALYZER :::: checking help to
ANALYZER :::: checking help help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: help help
ANALYZER :::: grade: 4
GETGRADE :::: TEACHER :Answer: people want to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973931f86c7782700f806ef
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: volunteer + want
ANALYZER :::: trick try: volunteer + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick try: help + want
ANALYZER :::: spelling fixed: want >> help
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people help to help $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: people help to help, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 597394d586c77804c848a090
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking choose people
ANALYZER :::: checking choose help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose help
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to help
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking volunteer people
ANALYZER :::: checking volunteer help
ANALYZER :::: checking volunteer to
ANALYZER :::: checking volunteer help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: volunteer help
ANALYZER :::: grade: 4
ANALYZER :::: checking to people
ANALYZER :::: checking to help
ANALYZER :::: checking to to
ANALYZER :::: checking to help
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people help
ANALYZER :::: checking choose help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose help
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: checking choose to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick try: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick try: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking people help
ANALYZER :::: checking choose help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose help
ANALYZER :::: grade: 4
----finished new check-----
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick try: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people want
ANALYZER :::: trick loop: choose + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: volunteer + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people to
ANALYZER :::: trick loop: choose + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 80
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: volunteer + want
ANALYZER :::: trick try: volunteer + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick try: help + want
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick try: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking choose people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: volunteer + people
ANALYZER :::: trick try: volunteer + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking to people
ANALYZER :::: trick loop: volunteer + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking volunteer people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking to people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking help people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 80
### SYNTAX ANALYZER RESULT:
### student: Answer: people want to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973931f86c7782700f806ef
### grade: 100
$$$$$$$$$$$$$$$$$$$$$$$$$$$ they want to help $$ google api
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
GETGRADE :::: TEACHER :Answer: they want to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973932586c7782700f806f0
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people they
ANALYZER :::: grade: 1
ANALYZER :::: checking want they
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 2
ANALYZER :::: checking to they
ANALYZER :::: checking to want
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking help they
ANALYZER :::: checking help want
ANALYZER :::: checking help to
ANALYZER :::: checking help help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: help help
ANALYZER :::: grade: 4
GETGRADE :::: TEACHER :Answer: they want to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973932586c7782700f806f0
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: choose + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: volunteer + want
ANALYZER :::: trick try: volunteer + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick try: help + want
ANALYZER :::: spelling fixed: want >> help
$$$$$$$$$$$$$$$$$$$$$$$$$$$ they help to help $$ google api
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: they help to help, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 597394d886c77804c848a091
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people they
ANALYZER :::: grade: 1
ANALYZER :::: checking choose they
ANALYZER :::: checking choose help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose help
ANALYZER :::: grade: 2
ANALYZER :::: checking to they
ANALYZER :::: checking to help
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking volunteer they
ANALYZER :::: checking volunteer help
ANALYZER :::: checking volunteer to
ANALYZER :::: checking volunteer help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: volunteer help
ANALYZER :::: grade: 4
ANALYZER :::: checking to they
ANALYZER :::: checking to help
ANALYZER :::: checking to to
ANALYZER :::: checking to help
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people they
ANALYZER :::: grade: 1
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking choose help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose help
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: trick loop: choose + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking choose to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick try: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick try: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking choose help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose help
ANALYZER :::: grade: 4
----finished new check-----
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick try: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people want
ANALYZER :::: trick loop: choose + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: volunteer + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people to
ANALYZER :::: trick loop: choose + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 80
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: choose + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: volunteer + want
ANALYZER :::: trick try: volunteer + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick try: help + want
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick try: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking choose they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: volunteer + they
ANALYZER :::: trick try: volunteer + they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick try: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick try: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: checking to they
ANALYZER :::: trick loop: volunteer + they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking volunteer they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick try: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick try: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking help they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick try: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: checking people they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: finished path check, BREAK!: they
ANALYZER :::: grade: 80
### SYNTAX ANALYZER RESULT:
### student: Answer: they want to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973932586c7782700f806f0
### grade: 100
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because the people want to help $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
GETGRADE :::: TEACHER :Answer: because the people want to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973932a86c7782700f806f1
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking want people
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to want
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking help people
ANALYZER :::: checking help want
ANALYZER :::: checking help to
ANALYZER :::: checking help help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: help help
ANALYZER :::: grade: 4
GETGRADE :::: TEACHER :Answer: because the people want to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973932a86c7782700f806f1
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: volunteer + want
ANALYZER :::: trick try: volunteer + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick try: help + want
ANALYZER :::: spelling fixed: want >> help
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because the people help to help $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: because the people help to help, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 597394db86c77804c848a092
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking choose people
ANALYZER :::: checking choose help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose help
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to help
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking volunteer people
ANALYZER :::: checking volunteer help
ANALYZER :::: checking volunteer to
ANALYZER :::: checking volunteer help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: volunteer help
ANALYZER :::: grade: 4
ANALYZER :::: checking to people
ANALYZER :::: checking to help
ANALYZER :::: checking to to
ANALYZER :::: checking to help
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking choose help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose help
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: trick loop: choose + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking choose to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick try: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick try: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking choose help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose help
ANALYZER :::: grade: 4
----finished new check-----
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick try: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people want
ANALYZER :::: trick loop: choose + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: volunteer + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people to
ANALYZER :::: trick loop: choose + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 80
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: volunteer + want
ANALYZER :::: trick try: volunteer + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick try: help + want
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick try: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking choose people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: volunteer + people
ANALYZER :::: trick try: volunteer + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking to people
ANALYZER :::: trick loop: volunteer + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking volunteer people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking to people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking help people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 80
### SYNTAX ANALYZER RESULT:
### student: Answer: because the people want to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973932a86c7782700f806f1
### grade: 100
$$$$$$$$$$$$$$$$$$$$$$$$$$$ thats because people want to help people $$ google api
ANALYZER :::: Teacher parts: thats
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
GETGRADE :::: TEACHER :Answer: thats because people want to help people, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 6, Machine Learnable: false, aid: 5973933286c7782700f806f2
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people thats
ANALYZER :::: trick loop: want + thats
ANALYZER :::: trick loop: to + thats
ANALYZER :::: trick loop: help + thats
ANALYZER :::: not equal tokens: people + thats
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking want thats
ANALYZER :::: trick loop: to + thats
ANALYZER :::: trick loop: help + thats
ANALYZER :::: trick try: help + thats
ANALYZER :::: not equal tokens: help + thats
ANALYZER :::: checking want people
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 2
ANALYZER :::: checking to thats
ANALYZER :::: trick loop: help + thats
ANALYZER :::: not equal tokens: to + thats
ANALYZER :::: checking to people
ANALYZER :::: checking to want
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking help thats
ANALYZER :::: not equal tokens: help + thats
ANALYZER :::: checking help people
ANALYZER :::: checking help want
ANALYZER :::: checking help to
ANALYZER :::: checking help help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: help help
ANALYZER :::: grade: 4
GETGRADE :::: TEACHER :Answer: thats because people want to help people, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 6, Machine Learnable: false, aid: 5973933286c7782700f806f2
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people thats
ANALYZER :::: trick loop: choose + thats
ANALYZER :::: trick loop: to + thats
ANALYZER :::: trick loop: volunteer + thats
ANALYZER :::: trick loop: to + thats
ANALYZER :::: trick loop: help + thats
ANALYZER :::: trick loop: people + thats
ANALYZER :::: trick loop: . + thats
ANALYZER :::: not equal tokens: people + thats
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: volunteer + want
ANALYZER :::: trick try: volunteer + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick try: help + want
ANALYZER :::: spelling fixed: want >> help
$$$$$$$$$$$$$$$$$$$$$$$$$$$ thats because people help to help people $$ google api
ANALYZER :::: Teacher parts: thats
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
----starting new check-----
GETGRADE :::: TEACHER :Answer: thats because people help to help people, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 6, Machine Learnable: false, aid: 597394dd86c77804c848a093
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people thats
ANALYZER :::: trick loop: choose + thats
ANALYZER :::: trick loop: to + thats
ANALYZER :::: trick loop: volunteer + thats
ANALYZER :::: trick loop: to + thats
ANALYZER :::: trick loop: help + thats
ANALYZER :::: trick loop: people + thats
ANALYZER :::: trick loop: . + thats
ANALYZER :::: not equal tokens: people + thats
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick try: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking people to
ANALYZER :::: trick loop: choose + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: choose + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: volunteer + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people thats
ANALYZER :::: trick loop: choose + thats
ANALYZER :::: trick loop: to + thats
ANALYZER :::: trick loop: volunteer + thats
ANALYZER :::: trick loop: to + thats
ANALYZER :::: trick loop: help + thats
ANALYZER :::: trick loop: people + thats
ANALYZER :::: trick loop: . + thats
ANALYZER :::: not equal tokens: people + thats
ANALYZER :::: checking choose thats
ANALYZER :::: trick loop: to + thats
ANALYZER :::: trick loop: volunteer + thats
ANALYZER :::: trick try: volunteer + thats
ANALYZER :::: trick loop: to + thats
ANALYZER :::: trick loop: help + thats
ANALYZER :::: trick try: help + thats
ANALYZER :::: trick loop: people + thats
ANALYZER :::: trick try: people + thats
ANALYZER :::: trick loop: . + thats
ANALYZER :::: not equal tokens: people + thats
ANALYZER :::: checking to thats
ANALYZER :::: trick loop: volunteer + thats
ANALYZER :::: trick loop: to + thats
ANALYZER :::: trick loop: help + thats
ANALYZER :::: trick loop: people + thats
ANALYZER :::: trick loop: . + thats
ANALYZER :::: not equal tokens: to + thats
ANALYZER :::: checking volunteer thats
ANALYZER :::: trick loop: to + thats
ANALYZER :::: trick loop: help + thats
ANALYZER :::: trick try: help + thats
ANALYZER :::: trick loop: people + thats
ANALYZER :::: trick try: people + thats
ANALYZER :::: trick loop: . + thats
ANALYZER :::: not equal tokens: people + thats
ANALYZER :::: checking to thats
ANALYZER :::: trick loop: help + thats
ANALYZER :::: trick loop: people + thats
ANALYZER :::: trick loop: . + thats
ANALYZER :::: not equal tokens: to + thats
ANALYZER :::: checking help thats
ANALYZER :::: trick loop: people + thats
ANALYZER :::: trick try: people + thats
ANALYZER :::: trick loop: . + thats
ANALYZER :::: not equal tokens: people + thats
ANALYZER :::: checking people thats
ANALYZER :::: trick loop: . + thats
ANALYZER :::: not equal tokens: people + thats
ANALYZER :::: finished path check, BREAK!: thats
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick try: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people want
ANALYZER :::: trick loop: choose + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: volunteer + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people to
ANALYZER :::: trick loop: choose + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: choose + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: volunteer + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people thats
ANALYZER :::: trick loop: choose + thats
ANALYZER :::: trick loop: to + thats
ANALYZER :::: trick loop: volunteer + thats
ANALYZER :::: trick loop: to + thats
ANALYZER :::: trick loop: help + thats
ANALYZER :::: trick loop: people + thats
ANALYZER :::: trick loop: . + thats
ANALYZER :::: not equal tokens: people + thats
ANALYZER :::: checking choose thats
ANALYZER :::: trick loop: to + thats
ANALYZER :::: trick loop: volunteer + thats
ANALYZER :::: trick try: volunteer + thats
ANALYZER :::: trick loop: to + thats
ANALYZER :::: trick loop: help + thats
ANALYZER :::: trick try: help + thats
ANALYZER :::: trick loop: people + thats
ANALYZER :::: trick try: people + thats
ANALYZER :::: trick loop: . + thats
ANALYZER :::: not equal tokens: people + thats
ANALYZER :::: checking to thats
ANALYZER :::: trick loop: volunteer + thats
ANALYZER :::: trick loop: to + thats
ANALYZER :::: trick loop: help + thats
ANALYZER :::: trick loop: people + thats
ANALYZER :::: trick loop: . + thats
ANALYZER :::: not equal tokens: to + thats
ANALYZER :::: checking volunteer thats
ANALYZER :::: trick loop: to + thats
ANALYZER :::: trick loop: help + thats
ANALYZER :::: trick try: help + thats
ANALYZER :::: trick loop: people + thats
ANALYZER :::: trick try: people + thats
ANALYZER :::: trick loop: . + thats
ANALYZER :::: not equal tokens: people + thats
ANALYZER :::: checking to thats
ANALYZER :::: trick loop: help + thats
ANALYZER :::: trick loop: people + thats
ANALYZER :::: trick loop: . + thats
ANALYZER :::: not equal tokens: to + thats
ANALYZER :::: checking help thats
ANALYZER :::: trick loop: people + thats
ANALYZER :::: trick try: people + thats
ANALYZER :::: trick loop: . + thats
ANALYZER :::: not equal tokens: people + thats
ANALYZER :::: checking people thats
ANALYZER :::: trick loop: . + thats
ANALYZER :::: not equal tokens: people + thats
ANALYZER :::: finished path check, BREAK!: thats
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: thats because people want to help people, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 6, Machine Learnable: false, aid: 5973933286c7782700f806f2
### grade: 100
$$$$$$$$$$$$$$$$$$$$$$$$$$$ want to help $$ google api
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
GETGRADE :::: TEACHER :Answer: want to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973933786c7782700f806f3
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people want
ANALYZER :::: trick loop: want + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people to
ANALYZER :::: trick loop: want + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people want
ANALYZER :::: trick loop: want + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 1
ANALYZER :::: checking people to
ANALYZER :::: trick loop: want + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking want to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 2
ANALYZER :::: checking people help
ANALYZER :::: trick loop: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking want help
ANALYZER :::: spelling fixed: help >> want
$$$$$$$$$$$$$$$$$$$$$$$$$$$ want to want $$ google api
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: want to want, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 597394e086c77804c848a094
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people want
ANALYZER :::: trick loop: want + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people to
ANALYZER :::: trick loop: want + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people want
ANALYZER :::: trick loop: want + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people want
ANALYZER :::: trick loop: want + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 1
ANALYZER :::: checking people to
ANALYZER :::: trick loop: want + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking want to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + want
ANALYZER :::: not equal tokens: help + want
ANALYZER :::: checking help to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want help
ANALYZER :::: grade: 3
GETGRADE :::: TEACHER :Answer: want to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973933786c7782700f806f3
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people want
ANALYZER :::: trick loop: choose + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: volunteer + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people to
ANALYZER :::: trick loop: choose + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people want
ANALYZER :::: trick loop: choose + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: volunteer + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking choose want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: volunteer + want
ANALYZER :::: trick try: volunteer + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick try: help + want
ANALYZER :::: spelling fixed: want >> help
$$$$$$$$$$$$$$$$$$$$$$$$$$$ help to help $$ google api
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: help to help, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 597394e186c77804c848a095
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking people to
ANALYZER :::: trick loop: choose + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking choose help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose help
ANALYZER :::: grade: 1
ANALYZER :::: checking people to
ANALYZER :::: trick loop: choose + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking choose to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick try: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick try: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 2
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking choose help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose help
ANALYZER :::: grade: 3
----finished new check-----
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick try: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking to want
ANALYZER :::: trick loop: volunteer + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: to + want
ANALYZER :::: checking volunteer want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick try: help + want
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick try: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking to want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: to + want
ANALYZER :::: checking help want
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick try: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: finished path check, BREAK!: want
ANALYZER :::: grade: 75
### SYNTAX ANALYZER RESULT:
### student: Answer: want to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973933786c7782700f806f3
### grade: 95
$$$$$$$$$$$$$$$$$$$$$$$$$$$ to help $$ google api
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
GETGRADE :::: TEACHER :Answer: to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 2, Machine Learnable: false, aid: 5973933c86c7782700f806f4
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people to
ANALYZER :::: trick loop: want + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people to
ANALYZER :::: trick loop: want + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking want to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 1
ANALYZER :::: checking people help
ANALYZER :::: trick loop: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking want help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want help
ANALYZER :::: grade: 2
GETGRADE :::: TEACHER :Answer: to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 2, Machine Learnable: false, aid: 5973933c86c7782700f806f4
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people to
ANALYZER :::: trick loop: choose + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people to
ANALYZER :::: trick loop: choose + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking choose to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick try: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick try: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 1
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking choose help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose help
ANALYZER :::: grade: 2
### SYNTAX ANALYZER RESULT:
### student: Answer: to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 2, Machine Learnable: false, aid: 5973933c86c7782700f806f4
### grade: 90
$$$$$$$$$$$$$$$$$$$$$$$$$$$ to help people $$ google api
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
GETGRADE :::: TEACHER :Answer: to help people, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973934186c7782700f806f5
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people to
ANALYZER :::: trick loop: want + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: want + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people to
ANALYZER :::: trick loop: want + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking want to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 1
ANALYZER :::: checking people help
ANALYZER :::: trick loop: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking want help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want help
ANALYZER :::: grade: 2
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: want + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking want people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: not equal tokens: help + people
ANALYZER :::: checking to people
ANALYZER :::: trick loop: help + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking help people
ANALYZER :::: not equal tokens: help + people
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
GETGRADE :::: TEACHER :Answer: to help people, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973934186c7782700f806f5
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people to
ANALYZER :::: trick loop: choose + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: choose + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: volunteer + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people to
ANALYZER :::: trick loop: choose + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking choose to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick try: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick try: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 1
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking choose help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose help
ANALYZER :::: grade: 2
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: choose + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: volunteer + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking choose people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: volunteer + people
ANALYZER :::: trick try: volunteer + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose people
ANALYZER :::: grade: 3
### SYNTAX ANALYZER RESULT:
### student: Answer: to help people, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973934186c7782700f806f5
### grade: 80
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people choose to volunteer because they want to help. $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: choose
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: volunteer
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
GETGRADE :::: TEACHER :Answer: people choose to volunteer because they want to help., Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 8, Machine Learnable: false, aid: 5973934886c7782700f806f6
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + choose
ANALYZER :::: spelling fixed: choose >> want
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people want to volunteer because they want to help. $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: volunteer
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: people want to volunteer because they want to help., Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 8, Machine Learnable: false, aid: 597394e686c77804c848a096
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking want people
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to want
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking to volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: to + volunteer
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking to want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: to + want
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking help people
ANALYZER :::: checking help want
ANALYZER :::: checking help to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: checking help volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking help they
ANALYZER :::: not equal tokens: help + they
ANALYZER :::: checking help want
ANALYZER :::: spelling fixed: want >> help
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people want to volunteer because they help to help. $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: volunteer
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: people want to volunteer because they help to help., Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 8, Machine Learnable: false, aid: 597394e786c77804c848a097
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking want people
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to want
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking to volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: to + volunteer
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking to help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: to + help
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: not equal tokens: help + help
ANALYZER :::: checking to help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: to + help
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people want
ANALYZER :::: trick loop: want + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: trick loop: want + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking want to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking help to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: not equal tokens: help + want
ANALYZER :::: checking help to
ANALYZER :::: checking help help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: help help
ANALYZER :::: grade: 4
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people want
ANALYZER :::: trick loop: want + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: trick loop: want + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking want to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking help to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: trick try: help + choose
ANALYZER :::: not equal tokens: help + choose
ANALYZER :::: checking people choose
ANALYZER :::: trick loop: want + choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: not equal tokens: people + choose
ANALYZER :::: checking people to
ANALYZER :::: trick loop: want + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people volunteer
ANALYZER :::: trick loop: want + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: people + volunteer
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people they
ANALYZER :::: grade: 1
ANALYZER :::: checking want people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: not equal tokens: help + people
ANALYZER :::: checking want choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: trick try: help + choose
ANALYZER :::: not equal tokens: help + choose
ANALYZER :::: checking want to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: checking want volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: trick try: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking want they
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: trick loop: help + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking to choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: not equal tokens: to + choose
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking to volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: to + volunteer
ANALYZER :::: checking to they
ANALYZER :::: checking to want
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking help people
ANALYZER :::: not equal tokens: help + people
ANALYZER :::: checking help choose
ANALYZER :::: not equal tokens: help + choose
ANALYZER :::: checking help to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: checking help volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking help they
ANALYZER :::: checking help want
ANALYZER :::: checking help to
ANALYZER :::: checking help help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: help help
ANALYZER :::: grade: 4
GETGRADE :::: TEACHER :Answer: people choose to volunteer because they want to help., Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 8, Machine Learnable: false, aid: 5973934886c7782700f806f6
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking choose people
ANALYZER :::: checking choose choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose choose
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to choose
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking volunteer people
ANALYZER :::: checking volunteer choose
ANALYZER :::: checking volunteer to
ANALYZER :::: checking volunteer volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: volunteer volunteer
ANALYZER :::: grade: 4
ANALYZER :::: checking to people
ANALYZER :::: checking to choose
ANALYZER :::: checking to to
ANALYZER :::: checking to volunteer
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking to want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: to + want
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick try: help + want
ANALYZER :::: spelling fixed: want >> help
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people choose to volunteer because they help to help. $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: choose
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: volunteer
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: people choose to volunteer because they help to help., Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 8, Machine Learnable: false, aid: 597394e886c77804c848a098
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking choose people
ANALYZER :::: checking choose choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose choose
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to choose
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking volunteer people
ANALYZER :::: checking volunteer choose
ANALYZER :::: checking volunteer to
ANALYZER :::: checking volunteer volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: volunteer volunteer
ANALYZER :::: grade: 4
ANALYZER :::: checking to people
ANALYZER :::: checking to choose
ANALYZER :::: checking to to
ANALYZER :::: checking to volunteer
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking to help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: to + help
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick try: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking to help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: to + help
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people choose
ANALYZER :::: checking choose choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose choose
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: checking choose to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking people volunteer
ANALYZER :::: checking choose volunteer
ANALYZER :::: checking to volunteer
ANALYZER :::: checking volunteer volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: volunteer volunteer
ANALYZER :::: grade: 4
ANALYZER :::: checking people they
ANALYZER :::: checking choose they
ANALYZER :::: checking to they
ANALYZER :::: checking volunteer they
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking help they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick try: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: checking people they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: finished path check, BREAK!: they
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick try: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking to help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: to + help
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people choose
ANALYZER :::: checking choose choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose choose
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: checking choose to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking people volunteer
ANALYZER :::: checking choose volunteer
ANALYZER :::: checking to volunteer
ANALYZER :::: checking volunteer volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: volunteer volunteer
ANALYZER :::: grade: 4
ANALYZER :::: checking people they
ANALYZER :::: checking choose they
ANALYZER :::: checking to they
ANALYZER :::: checking volunteer they
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking help they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick try: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: checking people they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: finished path check, BREAK!: they
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: people choose to volunteer because they want to help., Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 8, Machine Learnable: false, aid: 5973934886c7782700f806f6
### grade: 100
$$$$$$$$$$$$$$$$$$$$$$$$$$$ they choose to volunteer to help. $$ google api
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: choose
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: volunteer
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
GETGRADE :::: TEACHER :Answer: they choose to volunteer to help., Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 6, Machine Learnable: false, aid: 5973934f86c7782700f806f7
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: want + choose
ANALYZER :::: spelling fixed: choose >> want
$$$$$$$$$$$$$$$$$$$$$$$$$$$ they want to volunteer to help. $$ google api
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: volunteer
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: they want to volunteer to help., Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 6, Machine Learnable: false, aid: 597394ea86c77804c848a099
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people they
ANALYZER :::: grade: 1
ANALYZER :::: checking want they
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 2
ANALYZER :::: checking to they
ANALYZER :::: checking to want
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking to volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: to + volunteer
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: want + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: trick try: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking to help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: to + help
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people they
ANALYZER :::: grade: 1
ANALYZER :::: checking people want
ANALYZER :::: trick loop: want + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: trick loop: want + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking want to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking help to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: trick try: help + choose
ANALYZER :::: not equal tokens: help + choose
ANALYZER :::: checking people choose
ANALYZER :::: trick loop: want + choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: not equal tokens: people + choose
ANALYZER :::: checking people to
ANALYZER :::: trick loop: want + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people volunteer
ANALYZER :::: trick loop: want + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: people + volunteer
ANALYZER :::: checking people to
ANALYZER :::: trick loop: want + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: want + choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: trick try: help + choose
ANALYZER :::: not equal tokens: help + choose
ANALYZER :::: checking want they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick try: help + they
ANALYZER :::: not equal tokens: help + they
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking help they
ANALYZER :::: not equal tokens: help + they
ANALYZER :::: finished path check, BREAK!: they
ANALYZER :::: grade: 0
GETGRADE :::: TEACHER :Answer: they choose to volunteer to help., Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 6, Machine Learnable: false, aid: 5973934f86c7782700f806f7
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people they
ANALYZER :::: grade: 1
ANALYZER :::: checking choose they
ANALYZER :::: checking choose choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose choose
ANALYZER :::: grade: 2
ANALYZER :::: checking to they
ANALYZER :::: checking to choose
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking volunteer they
ANALYZER :::: checking volunteer choose
ANALYZER :::: checking volunteer to
ANALYZER :::: checking volunteer volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: volunteer volunteer
ANALYZER :::: grade: 4
ANALYZER :::: checking to they
ANALYZER :::: checking to choose
ANALYZER :::: checking to to
ANALYZER :::: checking to volunteer
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 5
ANALYZER :::: checking help they
ANALYZER :::: checking help choose
ANALYZER :::: checking help to
ANALYZER :::: checking help volunteer
ANALYZER :::: checking help to
ANALYZER :::: checking help help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: help help
ANALYZER :::: grade: 6
ANALYZER :::: checking people they
ANALYZER :::: checking people choose
ANALYZER :::: checking people to
ANALYZER :::: checking people volunteer
ANALYZER :::: checking people to
ANALYZER :::: checking people help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people they
ANALYZER :::: grade: 1
ANALYZER :::: checking people choose
ANALYZER :::: trick loop: choose + choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: volunteer + choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: trick loop: people + choose
ANALYZER :::: trick loop: . + choose
ANALYZER :::: not equal tokens: people + choose
ANALYZER :::: checking choose choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose choose
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: trick loop: choose + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking choose to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick try: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick try: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking people volunteer
ANALYZER :::: trick loop: choose + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: volunteer + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: trick loop: people + volunteer
ANALYZER :::: trick loop: . + volunteer
ANALYZER :::: not equal tokens: people + volunteer
ANALYZER :::: checking choose volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: volunteer + volunteer
ANALYZER :::: trick try: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose volunteer
ANALYZER :::: grade: 4
ANALYZER :::: checking people to
ANALYZER :::: trick loop: choose + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking choose to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick try: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick try: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 5
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking choose help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose help
ANALYZER :::: grade: 6
### SYNTAX ANALYZER RESULT:
### student: Answer: they choose to volunteer to help., Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 6, Machine Learnable: false, aid: 5973934f86c7782700f806f7
### grade: 95
$$$$$$$$$$$$$$$$$$$$$$$$$$$ they volunteer to help $$ google api
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: volunteer
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
GETGRADE :::: TEACHER :Answer: they volunteer to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973935486c7782700f806f8
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: want + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: trick try: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking people volunteer
ANALYZER :::: trick loop: want + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: people + volunteer
ANALYZER :::: checking people to
ANALYZER :::: trick loop: want + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: want + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: trick try: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking want they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick try: help + they
ANALYZER :::: not equal tokens: help + they
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking help they
ANALYZER :::: not equal tokens: help + they
ANALYZER :::: finished path check, BREAK!: they
ANALYZER :::: grade: 0
GETGRADE :::: TEACHER :Answer: they volunteer to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973935486c7782700f806f8
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: choose + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: volunteer + volunteer
ANALYZER :::: trick try: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people they
ANALYZER :::: grade: 1
ANALYZER :::: checking choose they
ANALYZER :::: checking choose volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: volunteer + volunteer
ANALYZER :::: trick try: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose volunteer
ANALYZER :::: grade: 2
ANALYZER :::: checking to they
ANALYZER :::: checking to volunteer
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking volunteer they
ANALYZER :::: checking volunteer volunteer
ANALYZER :::: checking volunteer to
ANALYZER :::: checking volunteer help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: volunteer help
ANALYZER :::: grade: 4
ANALYZER :::: checking to they
ANALYZER :::: checking to volunteer
ANALYZER :::: checking to to
ANALYZER :::: checking to help
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: choose + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: volunteer + volunteer
ANALYZER :::: trick try: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people they
ANALYZER :::: grade: 1
ANALYZER :::: checking people volunteer
ANALYZER :::: trick loop: choose + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: volunteer + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: trick loop: people + volunteer
ANALYZER :::: trick loop: . + volunteer
ANALYZER :::: not equal tokens: people + volunteer
ANALYZER :::: checking choose volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: volunteer + volunteer
ANALYZER :::: trick try: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose volunteer
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: trick loop: choose + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking choose to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick try: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick try: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking choose help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose help
ANALYZER :::: grade: 4
### SYNTAX ANALYZER RESULT:
### student: Answer: they volunteer to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973935486c7782700f806f8
### grade: 85
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people volunteer to help. $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: volunteer
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
GETGRADE :::: TEACHER :Answer: people volunteer to help., Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973935986c7782700f806f9
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: trick try: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking people volunteer
ANALYZER :::: trick loop: want + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: people + volunteer
ANALYZER :::: checking people to
ANALYZER :::: trick loop: want + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: trick try: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking want people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: not equal tokens: help + people
ANALYZER :::: checking to people
ANALYZER :::: trick loop: help + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking help people
ANALYZER :::: not equal tokens: help + people
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
GETGRADE :::: TEACHER :Answer: people volunteer to help., Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973935986c7782700f806f9
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: volunteer + volunteer
ANALYZER :::: trick try: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking choose people
ANALYZER :::: checking choose volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: volunteer + volunteer
ANALYZER :::: trick try: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose volunteer
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to volunteer
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking volunteer people
ANALYZER :::: checking volunteer volunteer
ANALYZER :::: checking volunteer to
ANALYZER :::: checking volunteer help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: volunteer help
ANALYZER :::: grade: 4
ANALYZER :::: checking to people
ANALYZER :::: checking to volunteer
ANALYZER :::: checking to to
ANALYZER :::: checking to help
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: volunteer + volunteer
ANALYZER :::: trick try: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people volunteer
ANALYZER :::: checking choose volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: volunteer + volunteer
ANALYZER :::: trick try: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose volunteer
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: checking choose to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick try: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick try: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking people help
ANALYZER :::: checking choose help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose help
ANALYZER :::: grade: 4
### SYNTAX ANALYZER RESULT:
### student: Answer: people volunteer to help., Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973935986c7782700f806f9
### grade: 85
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people need to help $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
GETGRADE :::: TEACHER :Answer: because people need to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973936186c7782700f806fa
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + need
ANALYZER :::: trick loop: to + need
ANALYZER :::: trick loop: help + need
ANALYZER :::: trick try: help + need
ANALYZER :::: spelling fixed: need >> help
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people help to help $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: because people help to help, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 597394ef86c77804c848a09a
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking want people
ANALYZER :::: checking want help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want help
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to help
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking help people
ANALYZER :::: checking help help
ANALYZER :::: checking help to
ANALYZER :::: checking help help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: help help
ANALYZER :::: grade: 4
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people help
ANALYZER :::: checking want help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want help
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: checking want to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking people help
ANALYZER :::: checking want help
ANALYZER :::: spelling fixed: help >> want
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people help to want $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: because people help to want, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 597394f086c77804c848a09b
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + help
ANALYZER :::: spelling fixed: help >> want
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people want to want $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: because people want to want, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 597394f186c77804c848a09c
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking want people
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to want
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + want
ANALYZER :::: not equal tokens: help + want
ANALYZER :::: checking to want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: to + want
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 95
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people want
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: checking want to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + want
ANALYZER :::: not equal tokens: help + want
ANALYZER :::: checking help to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 95
----finished new check-----
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking want people
ANALYZER :::: checking want help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want help
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to help
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + want
ANALYZER :::: not equal tokens: help + want
ANALYZER :::: checking to want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: to + want
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people help
ANALYZER :::: checking want help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want help
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: checking want to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + want
ANALYZER :::: not equal tokens: help + want
ANALYZER :::: checking help to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want help
ANALYZER :::: grade: 4
----finished new check-----
ANALYZER :::: not equal tokens: help + need
ANALYZER :::: checking people need
ANALYZER :::: trick loop: want + need
ANALYZER :::: trick loop: to + need
ANALYZER :::: trick loop: help + need
ANALYZER :::: not equal tokens: people + need
ANALYZER :::: checking people to
ANALYZER :::: trick loop: want + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 95
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + need
ANALYZER :::: trick loop: to + need
ANALYZER :::: trick loop: help + need
ANALYZER :::: trick try: help + need
ANALYZER :::: not equal tokens: help + need
ANALYZER :::: checking want people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: not equal tokens: help + people
ANALYZER :::: checking to people
ANALYZER :::: trick loop: help + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking help people
ANALYZER :::: not equal tokens: help + people
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 95
GETGRADE :::: TEACHER :Answer: because people need to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973936186c7782700f806fa
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + need
ANALYZER :::: trick loop: to + need
ANALYZER :::: trick loop: volunteer + need
ANALYZER :::: trick try: volunteer + need
ANALYZER :::: trick loop: to + need
ANALYZER :::: trick loop: help + need
ANALYZER :::: trick try: help + need
ANALYZER :::: spelling fixed: need >> help
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people help to help $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: because people help to help, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 597394f286c77804c848a09d
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking choose people
ANALYZER :::: checking choose help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose help
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to help
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking volunteer people
ANALYZER :::: checking volunteer help
ANALYZER :::: checking volunteer to
ANALYZER :::: checking volunteer help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: volunteer help
ANALYZER :::: grade: 4
ANALYZER :::: checking to people
ANALYZER :::: checking to help
ANALYZER :::: checking to to
ANALYZER :::: checking to help
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking choose help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose help
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: trick loop: choose + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking choose to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick try: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick try: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking choose help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose help
ANALYZER :::: grade: 4
----finished new check-----
ANALYZER :::: trick loop: people + need
ANALYZER :::: trick try: people + need
ANALYZER :::: trick loop: . + need
ANALYZER :::: not equal tokens: people + need
ANALYZER :::: checking people need
ANALYZER :::: trick loop: choose + need
ANALYZER :::: trick loop: to + need
ANALYZER :::: trick loop: volunteer + need
ANALYZER :::: trick loop: to + need
ANALYZER :::: trick loop: help + need
ANALYZER :::: trick loop: people + need
ANALYZER :::: trick loop: . + need
ANALYZER :::: not equal tokens: people + need
ANALYZER :::: checking people to
ANALYZER :::: trick loop: choose + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 80
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + need
ANALYZER :::: trick loop: to + need
ANALYZER :::: trick loop: volunteer + need
ANALYZER :::: trick try: volunteer + need
ANALYZER :::: trick loop: to + need
ANALYZER :::: trick loop: help + need
ANALYZER :::: trick try: help + need
ANALYZER :::: trick loop: people + need
ANALYZER :::: trick try: people + need
ANALYZER :::: trick loop: . + need
ANALYZER :::: not equal tokens: people + need
ANALYZER :::: checking choose people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: volunteer + people
ANALYZER :::: trick try: volunteer + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking to people
ANALYZER :::: trick loop: volunteer + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking volunteer people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking to people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking help people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 80
### SYNTAX ANALYZER RESULT:
### student: Answer: because people need to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973936186c7782700f806fa
### grade: 95
$$$$$$$$$$$$$$$$$$$$$$$$$$$ they love to volunteer $$ google api
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: love
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: volunteer
ANALYZER :::: Teacher parts: VERB
GETGRADE :::: TEACHER :Answer: they love to volunteer, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973936686c7782700f806fb
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: want + love
ANALYZER :::: trick loop: to + love
ANALYZER :::: trick loop: help + love
ANALYZER :::: trick try: help + love
ANALYZER :::: not equal tokens: help + love
ANALYZER :::: checking people love
ANALYZER :::: trick loop: want + love
ANALYZER :::: trick loop: to + love
ANALYZER :::: trick loop: help + love
ANALYZER :::: not equal tokens: people + love
ANALYZER :::: checking people to
ANALYZER :::: trick loop: want + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people volunteer
ANALYZER :::: trick loop: want + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: people + volunteer
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: want + love
ANALYZER :::: trick loop: to + love
ANALYZER :::: trick loop: help + love
ANALYZER :::: trick try: help + love
ANALYZER :::: not equal tokens: help + love
ANALYZER :::: checking want they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick try: help + they
ANALYZER :::: not equal tokens: help + they
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking help they
ANALYZER :::: not equal tokens: help + they
ANALYZER :::: finished path check, BREAK!: they
ANALYZER :::: grade: 0
GETGRADE :::: TEACHER :Answer: they love to volunteer, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973936686c7782700f806fb
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: choose + love
ANALYZER :::: trick loop: to + love
ANALYZER :::: trick loop: volunteer + love
ANALYZER :::: trick try: volunteer + love
ANALYZER :::: trick loop: to + love
ANALYZER :::: trick loop: help + love
ANALYZER :::: trick try: help + love
ANALYZER :::: trick loop: people + love
ANALYZER :::: trick try: people + love
ANALYZER :::: trick loop: . + love
ANALYZER :::: not equal tokens: people + love
ANALYZER :::: checking people love
ANALYZER :::: trick loop: choose + love
ANALYZER :::: trick loop: to + love
ANALYZER :::: trick loop: volunteer + love
ANALYZER :::: trick loop: to + love
ANALYZER :::: trick loop: help + love
ANALYZER :::: trick loop: people + love
ANALYZER :::: trick loop: . + love
ANALYZER :::: not equal tokens: people + love
ANALYZER :::: checking people to
ANALYZER :::: trick loop: choose + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people volunteer
ANALYZER :::: trick loop: choose + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: volunteer + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: trick loop: people + volunteer
ANALYZER :::: trick loop: . + volunteer
ANALYZER :::: not equal tokens: people + volunteer
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: choose + love
ANALYZER :::: trick loop: to + love
ANALYZER :::: trick loop: volunteer + love
ANALYZER :::: trick try: volunteer + love
ANALYZER :::: trick loop: to + love
ANALYZER :::: trick loop: help + love
ANALYZER :::: trick try: help + love
ANALYZER :::: trick loop: people + love
ANALYZER :::: trick try: people + love
ANALYZER :::: trick loop: . + love
ANALYZER :::: not equal tokens: people + love
ANALYZER :::: checking choose they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: volunteer + they
ANALYZER :::: trick try: volunteer + they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick try: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick try: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: checking to they
ANALYZER :::: trick loop: volunteer + they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking volunteer they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick try: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick try: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking help they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick try: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: checking people they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: finished path check, BREAK!: they
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: they love to volunteer, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973936686c7782700f806fb
### grade: 0
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because the people want to fly $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: fly
ANALYZER :::: Teacher parts: VERB
GETGRADE :::: TEACHER :Answer: because the people want to fly, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973936c86c7782700f806fc
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking want people
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to want
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + fly
ANALYZER :::: not equal tokens: help + fly
ANALYZER :::: checking to fly
ANALYZER :::: trick loop: help + fly
ANALYZER :::: not equal tokens: to + fly
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people want
ANALYZER :::: trick loop: want + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: trick loop: want + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking want to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + fly
ANALYZER :::: not equal tokens: help + fly
ANALYZER :::: checking help to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
GETGRADE :::: TEACHER :Answer: because the people want to fly, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973936c86c7782700f806fc
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: volunteer + want
ANALYZER :::: trick try: volunteer + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick try: help + want
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick try: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people want
ANALYZER :::: trick loop: choose + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: volunteer + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people to
ANALYZER :::: trick loop: choose + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people fly
ANALYZER :::: trick loop: choose + fly
ANALYZER :::: trick loop: to + fly
ANALYZER :::: trick loop: volunteer + fly
ANALYZER :::: trick loop: to + fly
ANALYZER :::: trick loop: help + fly
ANALYZER :::: trick loop: people + fly
ANALYZER :::: trick loop: . + fly
ANALYZER :::: not equal tokens: people + fly
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: volunteer + want
ANALYZER :::: trick try: volunteer + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick try: help + want
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick try: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking choose people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: volunteer + people
ANALYZER :::: trick try: volunteer + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking to people
ANALYZER :::: trick loop: volunteer + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking volunteer people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking to people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking help people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: because the people want to fly, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973936c86c7782700f806fc
### grade: 0
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because the people want money $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: money
ANALYZER :::: Teacher parts: NOUN
GETGRADE :::: TEACHER :Answer: because the people want money, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973937286c7782700f806fd
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking want people
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to want
ANALYZER :::: checking to money
ANALYZER :::: trick loop: help + money
ANALYZER :::: not equal tokens: to + money
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people want
ANALYZER :::: trick loop: want + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 2
ANALYZER :::: checking people money
ANALYZER :::: trick loop: want + money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: help + money
ANALYZER :::: not equal tokens: people + money
ANALYZER :::: checking want money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: help + money
ANALYZER :::: trick try: help + money
ANALYZER :::: not equal tokens: help + money
ANALYZER :::: checking to money
ANALYZER :::: trick loop: help + money
ANALYZER :::: not equal tokens: to + money
ANALYZER :::: checking help money
ANALYZER :::: not equal tokens: help + money
ANALYZER :::: finished path check, BREAK!: money
ANALYZER :::: grade: 0
GETGRADE :::: TEACHER :Answer: because the people want money, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973937286c7782700f806fd
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: volunteer + want
ANALYZER :::: trick try: volunteer + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick try: help + want
ANALYZER :::: spelling fixed: want >> help
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because the people help money $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: money
ANALYZER :::: Teacher parts: NOUN
----starting new check-----
GETGRADE :::: TEACHER :Answer: because the people help money, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 597394f686c77804c848a09e
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking choose people
ANALYZER :::: checking choose help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose help
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to help
ANALYZER :::: checking to money
ANALYZER :::: trick loop: volunteer + money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: help + money
ANALYZER :::: trick loop: people + money
ANALYZER :::: trick loop: . + money
ANALYZER :::: not equal tokens: to + money
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking choose help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose help
ANALYZER :::: grade: 2
ANALYZER :::: checking people money
ANALYZER :::: trick loop: choose + money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: volunteer + money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: help + money
ANALYZER :::: trick loop: people + money
ANALYZER :::: trick loop: . + money
ANALYZER :::: not equal tokens: people + money
ANALYZER :::: checking choose money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: volunteer + money
ANALYZER :::: trick try: volunteer + money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: help + money
ANALYZER :::: trick try: help + money
ANALYZER :::: trick loop: people + money
ANALYZER :::: trick try: people + money
ANALYZER :::: trick loop: . + money
ANALYZER :::: not equal tokens: people + money
ANALYZER :::: checking to money
ANALYZER :::: trick loop: volunteer + money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: help + money
ANALYZER :::: trick loop: people + money
ANALYZER :::: trick loop: . + money
ANALYZER :::: not equal tokens: to + money
ANALYZER :::: checking volunteer money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: help + money
ANALYZER :::: trick try: help + money
ANALYZER :::: trick loop: people + money
ANALYZER :::: trick try: people + money
ANALYZER :::: trick loop: . + money
ANALYZER :::: not equal tokens: people + money
ANALYZER :::: checking to money
ANALYZER :::: trick loop: help + money
ANALYZER :::: trick loop: people + money
ANALYZER :::: trick loop: . + money
ANALYZER :::: not equal tokens: to + money
ANALYZER :::: checking help money
ANALYZER :::: trick loop: people + money
ANALYZER :::: trick try: people + money
ANALYZER :::: trick loop: . + money
ANALYZER :::: not equal tokens: people + money
ANALYZER :::: checking people money
ANALYZER :::: trick loop: . + money
ANALYZER :::: not equal tokens: people + money
ANALYZER :::: finished path check, BREAK!: money
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick try: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people want
ANALYZER :::: trick loop: choose + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: volunteer + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people money
ANALYZER :::: trick loop: choose + money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: volunteer + money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: help + money
ANALYZER :::: trick loop: people + money
ANALYZER :::: trick loop: . + money
ANALYZER :::: not equal tokens: people + money
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: volunteer + want
ANALYZER :::: trick try: volunteer + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick try: help + want
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick try: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking choose people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: volunteer + people
ANALYZER :::: trick try: volunteer + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking to people
ANALYZER :::: trick loop: volunteer + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking volunteer people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking to people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking help people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: because the people want money, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973937286c7782700f806fd
### grade: 0
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because the apes want to help $$ google api
ANALYZER :::: Teacher parts: apes
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
GETGRADE :::: TEACHER :Answer: because the apes want to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973937886c7782700f806fe
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people apes
ANALYZER :::: trick loop: want + apes
ANALYZER :::: trick loop: to + apes
ANALYZER :::: trick loop: help + apes
ANALYZER :::: not equal tokens: people + apes
ANALYZER :::: checking people want
ANALYZER :::: trick loop: want + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people to
ANALYZER :::: trick loop: want + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people apes
ANALYZER :::: trick loop: want + apes
ANALYZER :::: trick loop: to + apes
ANALYZER :::: trick loop: help + apes
ANALYZER :::: not equal tokens: people + apes
ANALYZER :::: checking want apes
ANALYZER :::: trick loop: to + apes
ANALYZER :::: trick loop: help + apes
ANALYZER :::: trick try: help + apes
ANALYZER :::: not equal tokens: help + apes
ANALYZER :::: checking to apes
ANALYZER :::: trick loop: help + apes
ANALYZER :::: not equal tokens: to + apes
ANALYZER :::: checking help apes
ANALYZER :::: not equal tokens: help + apes
ANALYZER :::: finished path check, BREAK!: apes
ANALYZER :::: grade: 0
GETGRADE :::: TEACHER :Answer: because the apes want to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973937886c7782700f806fe
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people apes
ANALYZER :::: trick loop: choose + apes
ANALYZER :::: trick loop: to + apes
ANALYZER :::: trick loop: volunteer + apes
ANALYZER :::: trick loop: to + apes
ANALYZER :::: trick loop: help + apes
ANALYZER :::: trick loop: people + apes
ANALYZER :::: trick loop: . + apes
ANALYZER :::: not equal tokens: people + apes
ANALYZER :::: checking people want
ANALYZER :::: trick loop: choose + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: volunteer + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people to
ANALYZER :::: trick loop: choose + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people apes
ANALYZER :::: trick loop: choose + apes
ANALYZER :::: trick loop: to + apes
ANALYZER :::: trick loop: volunteer + apes
ANALYZER :::: trick loop: to + apes
ANALYZER :::: trick loop: help + apes
ANALYZER :::: trick loop: people + apes
ANALYZER :::: trick loop: . + apes
ANALYZER :::: not equal tokens: people + apes
ANALYZER :::: checking choose apes
ANALYZER :::: trick loop: to + apes
ANALYZER :::: trick loop: volunteer + apes
ANALYZER :::: trick try: volunteer + apes
ANALYZER :::: trick loop: to + apes
ANALYZER :::: trick loop: help + apes
ANALYZER :::: trick try: help + apes
ANALYZER :::: trick loop: people + apes
ANALYZER :::: trick try: people + apes
ANALYZER :::: trick loop: . + apes
ANALYZER :::: not equal tokens: people + apes
ANALYZER :::: checking to apes
ANALYZER :::: trick loop: volunteer + apes
ANALYZER :::: trick loop: to + apes
ANALYZER :::: trick loop: help + apes
ANALYZER :::: trick loop: people + apes
ANALYZER :::: trick loop: . + apes
ANALYZER :::: not equal tokens: to + apes
ANALYZER :::: checking volunteer apes
ANALYZER :::: trick loop: to + apes
ANALYZER :::: trick loop: help + apes
ANALYZER :::: trick try: help + apes
ANALYZER :::: trick loop: people + apes
ANALYZER :::: trick try: people + apes
ANALYZER :::: trick loop: . + apes
ANALYZER :::: not equal tokens: people + apes
ANALYZER :::: checking to apes
ANALYZER :::: trick loop: help + apes
ANALYZER :::: trick loop: people + apes
ANALYZER :::: trick loop: . + apes
ANALYZER :::: not equal tokens: to + apes
ANALYZER :::: checking help apes
ANALYZER :::: trick loop: people + apes
ANALYZER :::: trick try: people + apes
ANALYZER :::: trick loop: . + apes
ANALYZER :::: not equal tokens: people + apes
ANALYZER :::: checking people apes
ANALYZER :::: trick loop: . + apes
ANALYZER :::: not equal tokens: people + apes
ANALYZER :::: finished path check, BREAK!: apes
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: because the apes want to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973937886c7782700f806fe
### grade: 0
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because he want to help $$ google api
ANALYZER :::: Teacher parts: he
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
GETGRADE :::: TEACHER :Answer: because he want to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973937f86c7782700f806ff
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people he
ANALYZER :::: trick loop: want + he
ANALYZER :::: trick loop: to + he
ANALYZER :::: trick loop: help + he
ANALYZER :::: not equal tokens: people + he
ANALYZER :::: checking people want
ANALYZER :::: trick loop: want + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people to
ANALYZER :::: trick loop: want + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people he
ANALYZER :::: trick loop: want + he
ANALYZER :::: trick loop: to + he
ANALYZER :::: trick loop: help + he
ANALYZER :::: not equal tokens: people + he
ANALYZER :::: checking want he
ANALYZER :::: trick loop: to + he
ANALYZER :::: trick loop: help + he
ANALYZER :::: trick try: help + he
ANALYZER :::: not equal tokens: help + he
ANALYZER :::: checking to he
ANALYZER :::: trick loop: help + he
ANALYZER :::: not equal tokens: to + he
ANALYZER :::: checking help he
ANALYZER :::: not equal tokens: help + he
ANALYZER :::: finished path check, BREAK!: he
ANALYZER :::: grade: 0
GETGRADE :::: TEACHER :Answer: because he want to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973937f86c7782700f806ff
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people he
ANALYZER :::: trick loop: choose + he
ANALYZER :::: trick loop: to + he
ANALYZER :::: trick loop: volunteer + he
ANALYZER :::: trick loop: to + he
ANALYZER :::: trick loop: help + he
ANALYZER :::: trick loop: people + he
ANALYZER :::: trick loop: . + he
ANALYZER :::: not equal tokens: people + he
ANALYZER :::: checking people want
ANALYZER :::: trick loop: choose + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: volunteer + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people to
ANALYZER :::: trick loop: choose + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people he
ANALYZER :::: trick loop: choose + he
ANALYZER :::: trick loop: to + he
ANALYZER :::: trick loop: volunteer + he
ANALYZER :::: trick loop: to + he
ANALYZER :::: trick loop: help + he
ANALYZER :::: trick loop: people + he
ANALYZER :::: trick loop: . + he
ANALYZER :::: not equal tokens: people + he
ANALYZER :::: checking choose he
ANALYZER :::: trick loop: to + he
ANALYZER :::: trick loop: volunteer + he
ANALYZER :::: trick try: volunteer + he
ANALYZER :::: trick loop: to + he
ANALYZER :::: trick loop: help + he
ANALYZER :::: trick try: help + he
ANALYZER :::: trick loop: people + he
ANALYZER :::: trick try: people + he
ANALYZER :::: trick loop: . + he
ANALYZER :::: not equal tokens: people + he
ANALYZER :::: checking to he
ANALYZER :::: trick loop: volunteer + he
ANALYZER :::: trick loop: to + he
ANALYZER :::: trick loop: help + he
ANALYZER :::: trick loop: people + he
ANALYZER :::: trick loop: . + he
ANALYZER :::: not equal tokens: to + he
ANALYZER :::: checking volunteer he
ANALYZER :::: trick loop: to + he
ANALYZER :::: trick loop: help + he
ANALYZER :::: trick try: help + he
ANALYZER :::: trick loop: people + he
ANALYZER :::: trick try: people + he
ANALYZER :::: trick loop: . + he
ANALYZER :::: not equal tokens: people + he
ANALYZER :::: checking to he
ANALYZER :::: trick loop: help + he
ANALYZER :::: trick loop: people + he
ANALYZER :::: trick loop: . + he
ANALYZER :::: not equal tokens: to + he
ANALYZER :::: checking help he
ANALYZER :::: trick loop: people + he
ANALYZER :::: trick try: people + he
ANALYZER :::: trick loop: . + he
ANALYZER :::: not equal tokens: people + he
ANALYZER :::: checking people he
ANALYZER :::: trick loop: . + he
ANALYZER :::: not equal tokens: people + he
ANALYZER :::: finished path check, BREAK!: he
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: because he want to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973937f86c7782700f806ff
### grade: 0
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because he wants to help $$ google api
ANALYZER :::: Teacher parts: he
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: wants
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
GETGRADE :::: TEACHER :Answer: because he wants to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973938386c7782700f80700
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people he
ANALYZER :::: trick loop: want + he
ANALYZER :::: trick loop: to + he
ANALYZER :::: trick loop: help + he
ANALYZER :::: not equal tokens: people + he
ANALYZER :::: checking people wants
ANALYZER :::: trick loop: want + wants
ANALYZER :::: trick loop: to + wants
ANALYZER :::: trick loop: help + wants
ANALYZER :::: not equal tokens: people + wants
ANALYZER :::: checking people to
ANALYZER :::: trick loop: want + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people he
ANALYZER :::: trick loop: want + he
ANALYZER :::: trick loop: to + he
ANALYZER :::: trick loop: help + he
ANALYZER :::: not equal tokens: people + he
ANALYZER :::: checking want he
ANALYZER :::: trick loop: to + he
ANALYZER :::: trick loop: help + he
ANALYZER :::: trick try: help + he
ANALYZER :::: not equal tokens: help + he
ANALYZER :::: checking to he
ANALYZER :::: trick loop: help + he
ANALYZER :::: not equal tokens: to + he
ANALYZER :::: checking help he
ANALYZER :::: not equal tokens: help + he
ANALYZER :::: finished path check, BREAK!: he
ANALYZER :::: grade: 0
GETGRADE :::: TEACHER :Answer: because he wants to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973938386c7782700f80700
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people he
ANALYZER :::: trick loop: choose + he
ANALYZER :::: trick loop: to + he
ANALYZER :::: trick loop: volunteer + he
ANALYZER :::: trick loop: to + he
ANALYZER :::: trick loop: help + he
ANALYZER :::: trick loop: people + he
ANALYZER :::: trick loop: . + he
ANALYZER :::: not equal tokens: people + he
ANALYZER :::: checking people wants
ANALYZER :::: trick loop: choose + wants
ANALYZER :::: trick loop: to + wants
ANALYZER :::: trick loop: volunteer + wants
ANALYZER :::: trick loop: to + wants
ANALYZER :::: trick loop: help + wants
ANALYZER :::: trick loop: people + wants
ANALYZER :::: trick loop: . + wants
ANALYZER :::: not equal tokens: people + wants
ANALYZER :::: checking people to
ANALYZER :::: trick loop: choose + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people he
ANALYZER :::: trick loop: choose + he
ANALYZER :::: trick loop: to + he
ANALYZER :::: trick loop: volunteer + he
ANALYZER :::: trick loop: to + he
ANALYZER :::: trick loop: help + he
ANALYZER :::: trick loop: people + he
ANALYZER :::: trick loop: . + he
ANALYZER :::: not equal tokens: people + he
ANALYZER :::: checking choose he
ANALYZER :::: trick loop: to + he
ANALYZER :::: trick loop: volunteer + he
ANALYZER :::: trick try: volunteer + he
ANALYZER :::: trick loop: to + he
ANALYZER :::: trick loop: help + he
ANALYZER :::: trick try: help + he
ANALYZER :::: trick loop: people + he
ANALYZER :::: trick try: people + he
ANALYZER :::: trick loop: . + he
ANALYZER :::: not equal tokens: people + he
ANALYZER :::: checking to he
ANALYZER :::: trick loop: volunteer + he
ANALYZER :::: trick loop: to + he
ANALYZER :::: trick loop: help + he
ANALYZER :::: trick loop: people + he
ANALYZER :::: trick loop: . + he
ANALYZER :::: not equal tokens: to + he
ANALYZER :::: checking volunteer he
ANALYZER :::: trick loop: to + he
ANALYZER :::: trick loop: help + he
ANALYZER :::: trick try: help + he
ANALYZER :::: trick loop: people + he
ANALYZER :::: trick try: people + he
ANALYZER :::: trick loop: . + he
ANALYZER :::: not equal tokens: people + he
ANALYZER :::: checking to he
ANALYZER :::: trick loop: help + he
ANALYZER :::: trick loop: people + he
ANALYZER :::: trick loop: . + he
ANALYZER :::: not equal tokens: to + he
ANALYZER :::: checking help he
ANALYZER :::: trick loop: people + he
ANALYZER :::: trick try: people + he
ANALYZER :::: trick loop: . + he
ANALYZER :::: not equal tokens: people + he
ANALYZER :::: checking people he
ANALYZER :::: trick loop: . + he
ANALYZER :::: not equal tokens: people + he
ANALYZER :::: finished path check, BREAK!: he
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: because he wants to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973938386c7782700f80700
### grade: 0
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because the people have to help $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: have
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
GETGRADE :::: TEACHER :Answer: because the people have to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973938a86c7782700f80701
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + have
ANALYZER :::: trick loop: to + have
ANALYZER :::: trick loop: help + have
ANALYZER :::: trick try: help + have
ANALYZER :::: not equal tokens: help + have
ANALYZER :::: checking people have
ANALYZER :::: trick loop: want + have
ANALYZER :::: trick loop: to + have
ANALYZER :::: trick loop: help + have
ANALYZER :::: not equal tokens: people + have
ANALYZER :::: checking people to
ANALYZER :::: trick loop: want + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + have
ANALYZER :::: trick loop: to + have
ANALYZER :::: trick loop: help + have
ANALYZER :::: trick try: help + have
ANALYZER :::: not equal tokens: help + have
ANALYZER :::: checking want people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: not equal tokens: help + people
ANALYZER :::: checking to people
ANALYZER :::: trick loop: help + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking help people
ANALYZER :::: not equal tokens: help + people
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
GETGRADE :::: TEACHER :Answer: because the people have to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973938a86c7782700f80701
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + have
ANALYZER :::: trick loop: to + have
ANALYZER :::: trick loop: volunteer + have
ANALYZER :::: trick try: volunteer + have
ANALYZER :::: trick loop: to + have
ANALYZER :::: trick loop: help + have
ANALYZER :::: trick try: help + have
ANALYZER :::: trick loop: people + have
ANALYZER :::: trick try: people + have
ANALYZER :::: trick loop: . + have
ANALYZER :::: not equal tokens: people + have
ANALYZER :::: checking people have
ANALYZER :::: trick loop: choose + have
ANALYZER :::: trick loop: to + have
ANALYZER :::: trick loop: volunteer + have
ANALYZER :::: trick loop: to + have
ANALYZER :::: trick loop: help + have
ANALYZER :::: trick loop: people + have
ANALYZER :::: trick loop: . + have
ANALYZER :::: not equal tokens: people + have
ANALYZER :::: checking people to
ANALYZER :::: trick loop: choose + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: volunteer + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick loop: people + to
ANALYZER :::: trick loop: . + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + have
ANALYZER :::: trick loop: to + have
ANALYZER :::: trick loop: volunteer + have
ANALYZER :::: trick try: volunteer + have
ANALYZER :::: trick loop: to + have
ANALYZER :::: trick loop: help + have
ANALYZER :::: trick try: help + have
ANALYZER :::: trick loop: people + have
ANALYZER :::: trick try: people + have
ANALYZER :::: trick loop: . + have
ANALYZER :::: not equal tokens: people + have
ANALYZER :::: checking choose people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: volunteer + people
ANALYZER :::: trick try: volunteer + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking to people
ANALYZER :::: trick loop: volunteer + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking volunteer people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking to people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking help people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: because the people have to help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973938a86c7782700f80701
### grade: 0
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people want help $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: NOUN
GETGRADE :::: TEACHER :Answer: because people want help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973939186c7782700f80702
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking want people
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to want
ANALYZER :::: checking to help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: to + help
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people want
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 2
ANALYZER :::: checking people help
ANALYZER :::: checking want help
ANALYZER :::: checking to help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: to + help
ANALYZER :::: checking help help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: not equal tokens: help + help
ANALYZER :::: finished path check, BREAK!: help
ANALYZER :::: grade: 0
GETGRADE :::: TEACHER :Answer: because people want help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973939186c7782700f80702
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: volunteer + want
ANALYZER :::: trick try: volunteer + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick try: help + want
ANALYZER :::: spelling fixed: want >> help
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people help help $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: NOUN
----starting new check-----
GETGRADE :::: TEACHER :Answer: because people help help, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 597394fd86c77804c848a09f
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking choose people
ANALYZER :::: checking choose help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose help
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to help
ANALYZER :::: checking to help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: to + help
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking choose help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose help
ANALYZER :::: grade: 2
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking choose help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick try: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking to help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: to + help
ANALYZER :::: checking volunteer help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick try: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking to help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: to + help
ANALYZER :::: checking help help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick try: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking people help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: help
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick try: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people want
ANALYZER :::: trick loop: choose + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: volunteer + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: volunteer + want
ANALYZER :::: trick try: volunteer + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick try: help + want
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick try: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking choose people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: volunteer + people
ANALYZER :::: trick try: volunteer + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking to people
ANALYZER :::: trick loop: volunteer + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking volunteer people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking to people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking help people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: because people want help, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973939186c7782700f80702
### grade: 0
$$$$$$$$$$$$$$$$$$$$$$$$$$$ they are bored $$ google api
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: are
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: bored
ANALYZER :::: Teacher parts: ADJ
GETGRADE :::: TEACHER :Answer: they are bored, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973939886c7782700f80703
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: want + are
ANALYZER :::: trick loop: to + are
ANALYZER :::: trick loop: help + are
ANALYZER :::: trick try: help + are
ANALYZER :::: not equal tokens: help + are
ANALYZER :::: checking people are
ANALYZER :::: trick loop: want + are
ANALYZER :::: trick loop: to + are
ANALYZER :::: trick loop: help + are
ANALYZER :::: not equal tokens: people + are
ANALYZER :::: checking people bored
ANALYZER :::: trick loop: want + bored
ANALYZER :::: trick loop: to + bored
ANALYZER :::: trick loop: help + bored
ANALYZER :::: not equal tokens: people + bored
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: want + are
ANALYZER :::: trick loop: to + are
ANALYZER :::: trick loop: help + are
ANALYZER :::: trick try: help + are
ANALYZER :::: not equal tokens: help + are
ANALYZER :::: checking want they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick try: help + they
ANALYZER :::: not equal tokens: help + they
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking help they
ANALYZER :::: not equal tokens: help + they
ANALYZER :::: finished path check, BREAK!: they
ANALYZER :::: grade: 0
GETGRADE :::: TEACHER :Answer: they are bored, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973939886c7782700f80703
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: choose + are
ANALYZER :::: trick loop: to + are
ANALYZER :::: trick loop: volunteer + are
ANALYZER :::: trick try: volunteer + are
ANALYZER :::: trick loop: to + are
ANALYZER :::: trick loop: help + are
ANALYZER :::: trick try: help + are
ANALYZER :::: trick loop: people + are
ANALYZER :::: trick try: people + are
ANALYZER :::: trick loop: . + are
ANALYZER :::: not equal tokens: people + are
ANALYZER :::: checking people are
ANALYZER :::: trick loop: choose + are
ANALYZER :::: trick loop: to + are
ANALYZER :::: trick loop: volunteer + are
ANALYZER :::: trick loop: to + are
ANALYZER :::: trick loop: help + are
ANALYZER :::: trick loop: people + are
ANALYZER :::: trick loop: . + are
ANALYZER :::: not equal tokens: people + are
ANALYZER :::: checking people bored
ANALYZER :::: trick loop: choose + bored
ANALYZER :::: trick loop: to + bored
ANALYZER :::: trick loop: volunteer + bored
ANALYZER :::: trick loop: to + bored
ANALYZER :::: trick loop: help + bored
ANALYZER :::: trick loop: people + bored
ANALYZER :::: trick loop: . + bored
ANALYZER :::: not equal tokens: people + bored
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: choose + are
ANALYZER :::: trick loop: to + are
ANALYZER :::: trick loop: volunteer + are
ANALYZER :::: trick try: volunteer + are
ANALYZER :::: trick loop: to + are
ANALYZER :::: trick loop: help + are
ANALYZER :::: trick try: help + are
ANALYZER :::: trick loop: people + are
ANALYZER :::: trick try: people + are
ANALYZER :::: trick loop: . + are
ANALYZER :::: not equal tokens: people + are
ANALYZER :::: checking choose they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: volunteer + they
ANALYZER :::: trick try: volunteer + they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick try: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick try: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: checking to they
ANALYZER :::: trick loop: volunteer + they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking volunteer they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick try: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick try: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking help they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick try: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: checking people they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: finished path check, BREAK!: they
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: they are bored, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973939886c7782700f80703
### grade: 0
$$$$$$$$$$$$$$$$$$$$$$$$$$$ they are working for their own free will $$ google api
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: are
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: working
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: their
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: own
ANALYZER :::: Teacher parts: ADJ
ANALYZER :::: Teacher parts: free
ANALYZER :::: Teacher parts: ADJ
ANALYZER :::: Teacher parts: will
ANALYZER :::: Teacher parts: NOUN
GETGRADE :::: TEACHER :Answer: they are working for their own free will, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 7, Machine Learnable: false, aid: 5973939e86c7782700f80704
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: want + working
ANALYZER :::: trick loop: to + working
ANALYZER :::: trick loop: help + working
ANALYZER :::: trick try: help + working
ANALYZER :::: spelling fixed: working >> help
$$$$$$$$$$$$$$$$$$$$$$$$$$$ they are help for their own free will $$ google api
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: are
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: their
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: own
ANALYZER :::: Teacher parts: ADJ
ANALYZER :::: Teacher parts: free
ANALYZER :::: Teacher parts: ADJ
ANALYZER :::: Teacher parts: will
ANALYZER :::: Teacher parts: NOUN
----starting new check-----
GETGRADE :::: TEACHER :Answer: they are help for their own free will, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 7, Machine Learnable: false, aid: 5973950086c77804c848a0a0
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: want + are
ANALYZER :::: trick loop: to + are
ANALYZER :::: trick loop: help + are
ANALYZER :::: trick try: help + are
ANALYZER :::: not equal tokens: help + are
ANALYZER :::: checking people are
ANALYZER :::: trick loop: want + are
ANALYZER :::: trick loop: to + are
ANALYZER :::: trick loop: help + are
ANALYZER :::: not equal tokens: people + are
ANALYZER :::: checking people help
ANALYZER :::: trick loop: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking people their
ANALYZER :::: trick loop: want + their
ANALYZER :::: trick loop: to + their
ANALYZER :::: trick loop: help + their
ANALYZER :::: not equal tokens: people + their
ANALYZER :::: checking people own
ANALYZER :::: trick loop: want + own
ANALYZER :::: trick loop: to + own
ANALYZER :::: trick loop: help + own
ANALYZER :::: not equal tokens: people + own
ANALYZER :::: checking people free
ANALYZER :::: trick loop: want + free
ANALYZER :::: trick loop: to + free
ANALYZER :::: trick loop: help + free
ANALYZER :::: not equal tokens: people + free
ANALYZER :::: checking people will
ANALYZER :::: trick loop: want + will
ANALYZER :::: trick loop: to + will
ANALYZER :::: trick loop: help + will
ANALYZER :::: not equal tokens: people + will
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: want + are
ANALYZER :::: trick loop: to + are
ANALYZER :::: trick loop: help + are
ANALYZER :::: trick try: help + are
ANALYZER :::: not equal tokens: help + are
ANALYZER :::: checking want they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick try: help + they
ANALYZER :::: not equal tokens: help + they
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking help they
ANALYZER :::: not equal tokens: help + they
ANALYZER :::: finished path check, BREAK!: they
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: not equal tokens: help + working
ANALYZER :::: checking people are
ANALYZER :::: trick loop: want + are
ANALYZER :::: trick loop: to + are
ANALYZER :::: trick loop: help + are
ANALYZER :::: not equal tokens: people + are
ANALYZER :::: checking people working
ANALYZER :::: trick loop: want + working
ANALYZER :::: trick loop: to + working
ANALYZER :::: trick loop: help + working
ANALYZER :::: not equal tokens: people + working
ANALYZER :::: checking people their
ANALYZER :::: trick loop: want + their
ANALYZER :::: trick loop: to + their
ANALYZER :::: trick loop: help + their
ANALYZER :::: not equal tokens: people + their
ANALYZER :::: checking people own
ANALYZER :::: trick loop: want + own
ANALYZER :::: trick loop: to + own
ANALYZER :::: trick loop: help + own
ANALYZER :::: not equal tokens: people + own
ANALYZER :::: checking people free
ANALYZER :::: trick loop: want + free
ANALYZER :::: trick loop: to + free
ANALYZER :::: trick loop: help + free
ANALYZER :::: not equal tokens: people + free
ANALYZER :::: checking people will
ANALYZER :::: trick loop: want + will
ANALYZER :::: trick loop: to + will
ANALYZER :::: trick loop: help + will
ANALYZER :::: not equal tokens: people + will
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: want + working
ANALYZER :::: trick loop: to + working
ANALYZER :::: trick loop: help + working
ANALYZER :::: trick try: help + working
ANALYZER :::: not equal tokens: help + working
ANALYZER :::: checking want they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick try: help + they
ANALYZER :::: not equal tokens: help + they
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking help they
ANALYZER :::: not equal tokens: help + they
ANALYZER :::: finished path check, BREAK!: they
ANALYZER :::: grade: 0
GETGRADE :::: TEACHER :Answer: they are working for their own free will, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 7, Machine Learnable: false, aid: 5973939e86c7782700f80704
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: choose + working
ANALYZER :::: trick loop: to + working
ANALYZER :::: trick loop: volunteer + working
ANALYZER :::: trick try: volunteer + working
ANALYZER :::: trick loop: to + working
ANALYZER :::: trick loop: help + working
ANALYZER :::: trick try: help + working
ANALYZER :::: spelling fixed: working >> help
$$$$$$$$$$$$$$$$$$$$$$$$$$$ they are help for their own free will $$ google api
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: are
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: their
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: own
ANALYZER :::: Teacher parts: ADJ
ANALYZER :::: Teacher parts: free
ANALYZER :::: Teacher parts: ADJ
ANALYZER :::: Teacher parts: will
ANALYZER :::: Teacher parts: NOUN
----starting new check-----
GETGRADE :::: TEACHER :Answer: they are help for their own free will, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 7, Machine Learnable: false, aid: 5973950186c77804c848a0a1
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: choose + are
ANALYZER :::: trick loop: to + are
ANALYZER :::: trick loop: volunteer + are
ANALYZER :::: trick try: volunteer + are
ANALYZER :::: trick loop: to + are
ANALYZER :::: trick loop: help + are
ANALYZER :::: trick try: help + are
ANALYZER :::: trick loop: people + are
ANALYZER :::: trick try: people + are
ANALYZER :::: trick loop: . + are
ANALYZER :::: not equal tokens: people + are
ANALYZER :::: checking people are
ANALYZER :::: trick loop: choose + are
ANALYZER :::: trick loop: to + are
ANALYZER :::: trick loop: volunteer + are
ANALYZER :::: trick loop: to + are
ANALYZER :::: trick loop: help + are
ANALYZER :::: trick loop: people + are
ANALYZER :::: trick loop: . + are
ANALYZER :::: not equal tokens: people + are
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking people their
ANALYZER :::: trick loop: choose + their
ANALYZER :::: trick loop: to + their
ANALYZER :::: trick loop: volunteer + their
ANALYZER :::: trick loop: to + their
ANALYZER :::: trick loop: help + their
ANALYZER :::: trick loop: people + their
ANALYZER :::: trick loop: . + their
ANALYZER :::: not equal tokens: people + their
ANALYZER :::: checking people own
ANALYZER :::: trick loop: choose + own
ANALYZER :::: trick loop: to + own
ANALYZER :::: trick loop: volunteer + own
ANALYZER :::: trick loop: to + own
ANALYZER :::: trick loop: help + own
ANALYZER :::: trick loop: people + own
ANALYZER :::: trick loop: . + own
ANALYZER :::: not equal tokens: people + own
ANALYZER :::: checking people free
ANALYZER :::: trick loop: choose + free
ANALYZER :::: trick loop: to + free
ANALYZER :::: trick loop: volunteer + free
ANALYZER :::: trick loop: to + free
ANALYZER :::: trick loop: help + free
ANALYZER :::: trick loop: people + free
ANALYZER :::: trick loop: . + free
ANALYZER :::: not equal tokens: people + free
ANALYZER :::: checking people will
ANALYZER :::: trick loop: choose + will
ANALYZER :::: trick loop: to + will
ANALYZER :::: trick loop: volunteer + will
ANALYZER :::: trick loop: to + will
ANALYZER :::: trick loop: help + will
ANALYZER :::: trick loop: people + will
ANALYZER :::: trick loop: . + will
ANALYZER :::: not equal tokens: people + will
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: choose + are
ANALYZER :::: trick loop: to + are
ANALYZER :::: trick loop: volunteer + are
ANALYZER :::: trick try: volunteer + are
ANALYZER :::: trick loop: to + are
ANALYZER :::: trick loop: help + are
ANALYZER :::: trick try: help + are
ANALYZER :::: trick loop: people + are
ANALYZER :::: trick try: people + are
ANALYZER :::: trick loop: . + are
ANALYZER :::: not equal tokens: people + are
ANALYZER :::: checking choose they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: volunteer + they
ANALYZER :::: trick try: volunteer + they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick try: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick try: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: checking to they
ANALYZER :::: trick loop: volunteer + they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking volunteer they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick try: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick try: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking help they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick try: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: checking people they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: finished path check, BREAK!: they
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: people + working
ANALYZER :::: trick try: people + working
ANALYZER :::: trick loop: . + working
ANALYZER :::: not equal tokens: people + working
ANALYZER :::: checking people are
ANALYZER :::: trick loop: choose + are
ANALYZER :::: trick loop: to + are
ANALYZER :::: trick loop: volunteer + are
ANALYZER :::: trick loop: to + are
ANALYZER :::: trick loop: help + are
ANALYZER :::: trick loop: people + are
ANALYZER :::: trick loop: . + are
ANALYZER :::: not equal tokens: people + are
ANALYZER :::: checking people working
ANALYZER :::: trick loop: choose + working
ANALYZER :::: trick loop: to + working
ANALYZER :::: trick loop: volunteer + working
ANALYZER :::: trick loop: to + working
ANALYZER :::: trick loop: help + working
ANALYZER :::: trick loop: people + working
ANALYZER :::: trick loop: . + working
ANALYZER :::: not equal tokens: people + working
ANALYZER :::: checking people their
ANALYZER :::: trick loop: choose + their
ANALYZER :::: trick loop: to + their
ANALYZER :::: trick loop: volunteer + their
ANALYZER :::: trick loop: to + their
ANALYZER :::: trick loop: help + their
ANALYZER :::: trick loop: people + their
ANALYZER :::: trick loop: . + their
ANALYZER :::: not equal tokens: people + their
ANALYZER :::: checking people own
ANALYZER :::: trick loop: choose + own
ANALYZER :::: trick loop: to + own
ANALYZER :::: trick loop: volunteer + own
ANALYZER :::: trick loop: to + own
ANALYZER :::: trick loop: help + own
ANALYZER :::: trick loop: people + own
ANALYZER :::: trick loop: . + own
ANALYZER :::: not equal tokens: people + own
ANALYZER :::: checking people free
ANALYZER :::: trick loop: choose + free
ANALYZER :::: trick loop: to + free
ANALYZER :::: trick loop: volunteer + free
ANALYZER :::: trick loop: to + free
ANALYZER :::: trick loop: help + free
ANALYZER :::: trick loop: people + free
ANALYZER :::: trick loop: . + free
ANALYZER :::: not equal tokens: people + free
ANALYZER :::: checking people will
ANALYZER :::: trick loop: choose + will
ANALYZER :::: trick loop: to + will
ANALYZER :::: trick loop: volunteer + will
ANALYZER :::: trick loop: to + will
ANALYZER :::: trick loop: help + will
ANALYZER :::: trick loop: people + will
ANALYZER :::: trick loop: . + will
ANALYZER :::: not equal tokens: people + will
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: choose + working
ANALYZER :::: trick loop: to + working
ANALYZER :::: trick loop: volunteer + working
ANALYZER :::: trick try: volunteer + working
ANALYZER :::: trick loop: to + working
ANALYZER :::: trick loop: help + working
ANALYZER :::: trick try: help + working
ANALYZER :::: trick loop: people + working
ANALYZER :::: trick try: people + working
ANALYZER :::: trick loop: . + working
ANALYZER :::: not equal tokens: people + working
ANALYZER :::: checking choose they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: volunteer + they
ANALYZER :::: trick try: volunteer + they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick try: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick try: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: checking to they
ANALYZER :::: trick loop: volunteer + they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking volunteer they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick try: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick try: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking help they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick try: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: checking people they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: finished path check, BREAK!: they
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: they are working for their own free will, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 7, Machine Learnable: false, aid: 5973939e86c7782700f80704
### grade: 0
$$$$$$$$$$$$$$$$$$$$$$$$$$$ the people need money $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: money
ANALYZER :::: Teacher parts: NOUN
GETGRADE :::: TEACHER :Answer: the people need money, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 597393a286c7782700f80705
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + need
ANALYZER :::: spelling fixed: need >> want
$$$$$$$$$$$$$$$$$$$$$$$$$$$ the people want money $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: money
ANALYZER :::: Teacher parts: NOUN
----starting new check-----
GETGRADE :::: TEACHER :Answer: the people want money, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973950486c77804c848a0a2
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking want people
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to want
ANALYZER :::: checking to money
ANALYZER :::: trick loop: help + money
ANALYZER :::: not equal tokens: to + money
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people want
ANALYZER :::: trick loop: want + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 2
ANALYZER :::: checking people money
ANALYZER :::: trick loop: want + money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: help + money
ANALYZER :::: not equal tokens: people + money
ANALYZER :::: checking want money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: help + money
ANALYZER :::: trick try: help + money
ANALYZER :::: not equal tokens: help + money
ANALYZER :::: checking to money
ANALYZER :::: trick loop: help + money
ANALYZER :::: not equal tokens: to + money
ANALYZER :::: checking help money
ANALYZER :::: not equal tokens: help + money
ANALYZER :::: finished path check, BREAK!: money
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: to + need
ANALYZER :::: trick loop: help + need
ANALYZER :::: trick try: help + need
ANALYZER :::: spelling fixed: need >> help
$$$$$$$$$$$$$$$$$$$$$$$$$$$ the people help money $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: money
ANALYZER :::: Teacher parts: NOUN
----starting new check-----
GETGRADE :::: TEACHER :Answer: the people help money, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973950586c77804c848a0a3
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking want people
ANALYZER :::: checking want help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want help
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to help
ANALYZER :::: checking to money
ANALYZER :::: trick loop: help + money
ANALYZER :::: not equal tokens: to + money
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people help
ANALYZER :::: trick loop: want + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking want help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want help
ANALYZER :::: grade: 2
ANALYZER :::: checking people money
ANALYZER :::: trick loop: want + money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: help + money
ANALYZER :::: not equal tokens: people + money
ANALYZER :::: checking want money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: help + money
ANALYZER :::: trick try: help + money
ANALYZER :::: not equal tokens: help + money
ANALYZER :::: checking to money
ANALYZER :::: trick loop: help + money
ANALYZER :::: not equal tokens: to + money
ANALYZER :::: checking help money
ANALYZER :::: not equal tokens: help + money
ANALYZER :::: finished path check, BREAK!: money
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: not equal tokens: help + need
ANALYZER :::: checking people need
ANALYZER :::: trick loop: want + need
ANALYZER :::: trick loop: to + need
ANALYZER :::: trick loop: help + need
ANALYZER :::: not equal tokens: people + need
ANALYZER :::: checking people money
ANALYZER :::: trick loop: want + money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: help + money
ANALYZER :::: not equal tokens: people + money
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + need
ANALYZER :::: trick loop: to + need
ANALYZER :::: trick loop: help + need
ANALYZER :::: trick try: help + need
ANALYZER :::: not equal tokens: help + need
ANALYZER :::: checking want people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: not equal tokens: help + people
ANALYZER :::: checking to people
ANALYZER :::: trick loop: help + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking help people
ANALYZER :::: not equal tokens: help + people
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
GETGRADE :::: TEACHER :Answer: the people need money, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 597393a286c7782700f80705
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + need
ANALYZER :::: trick loop: to + need
ANALYZER :::: trick loop: volunteer + need
ANALYZER :::: trick try: volunteer + need
ANALYZER :::: trick loop: to + need
ANALYZER :::: trick loop: help + need
ANALYZER :::: trick try: help + need
ANALYZER :::: spelling fixed: need >> help
$$$$$$$$$$$$$$$$$$$$$$$$$$$ the people help money $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: money
ANALYZER :::: Teacher parts: NOUN
----starting new check-----
GETGRADE :::: TEACHER :Answer: the people help money, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973950686c77804c848a0a4
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking choose people
ANALYZER :::: checking choose help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose help
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to help
ANALYZER :::: checking to money
ANALYZER :::: trick loop: volunteer + money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: help + money
ANALYZER :::: trick loop: people + money
ANALYZER :::: trick loop: . + money
ANALYZER :::: not equal tokens: to + money
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people help
ANALYZER :::: trick loop: choose + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick loop: people + help
ANALYZER :::: trick loop: . + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking choose help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: volunteer + help
ANALYZER :::: trick try: volunteer + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose help
ANALYZER :::: grade: 2
ANALYZER :::: checking people money
ANALYZER :::: trick loop: choose + money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: volunteer + money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: help + money
ANALYZER :::: trick loop: people + money
ANALYZER :::: trick loop: . + money
ANALYZER :::: not equal tokens: people + money
ANALYZER :::: checking choose money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: volunteer + money
ANALYZER :::: trick try: volunteer + money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: help + money
ANALYZER :::: trick try: help + money
ANALYZER :::: trick loop: people + money
ANALYZER :::: trick try: people + money
ANALYZER :::: trick loop: . + money
ANALYZER :::: not equal tokens: people + money
ANALYZER :::: checking to money
ANALYZER :::: trick loop: volunteer + money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: help + money
ANALYZER :::: trick loop: people + money
ANALYZER :::: trick loop: . + money
ANALYZER :::: not equal tokens: to + money
ANALYZER :::: checking volunteer money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: help + money
ANALYZER :::: trick try: help + money
ANALYZER :::: trick loop: people + money
ANALYZER :::: trick try: people + money
ANALYZER :::: trick loop: . + money
ANALYZER :::: not equal tokens: people + money
ANALYZER :::: checking to money
ANALYZER :::: trick loop: help + money
ANALYZER :::: trick loop: people + money
ANALYZER :::: trick loop: . + money
ANALYZER :::: not equal tokens: to + money
ANALYZER :::: checking help money
ANALYZER :::: trick loop: people + money
ANALYZER :::: trick try: people + money
ANALYZER :::: trick loop: . + money
ANALYZER :::: not equal tokens: people + money
ANALYZER :::: checking people money
ANALYZER :::: trick loop: . + money
ANALYZER :::: not equal tokens: people + money
ANALYZER :::: finished path check, BREAK!: money
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: people + need
ANALYZER :::: trick try: people + need
ANALYZER :::: trick loop: . + need
ANALYZER :::: not equal tokens: people + need
ANALYZER :::: checking people need
ANALYZER :::: trick loop: choose + need
ANALYZER :::: trick loop: to + need
ANALYZER :::: trick loop: volunteer + need
ANALYZER :::: trick loop: to + need
ANALYZER :::: trick loop: help + need
ANALYZER :::: trick loop: people + need
ANALYZER :::: trick loop: . + need
ANALYZER :::: not equal tokens: people + need
ANALYZER :::: checking people money
ANALYZER :::: trick loop: choose + money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: volunteer + money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: help + money
ANALYZER :::: trick loop: people + money
ANALYZER :::: trick loop: . + money
ANALYZER :::: not equal tokens: people + money
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + need
ANALYZER :::: trick loop: to + need
ANALYZER :::: trick loop: volunteer + need
ANALYZER :::: trick try: volunteer + need
ANALYZER :::: trick loop: to + need
ANALYZER :::: trick loop: help + need
ANALYZER :::: trick try: help + need
ANALYZER :::: trick loop: people + need
ANALYZER :::: trick try: people + need
ANALYZER :::: trick loop: . + need
ANALYZER :::: not equal tokens: people + need
ANALYZER :::: checking choose people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: volunteer + people
ANALYZER :::: trick try: volunteer + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking to people
ANALYZER :::: trick loop: volunteer + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking volunteer people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking to people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking help people
ANALYZER :::: trick loop: people + people
ANALYZER :::: trick try: people + people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: . + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: the people need money, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 597393a286c7782700f80705
### grade: 0
$$$$$$$$$$$$$$$$$$$$$$$$$$$ they dont have money $$ google api
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: dont
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: have
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: money
ANALYZER :::: Teacher parts: NOUN
GETGRADE :::: TEACHER :Answer: they dont have money, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 597393a786c7782700f80706
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: want + dont
ANALYZER :::: trick loop: to + dont
ANALYZER :::: trick loop: help + dont
ANALYZER :::: trick try: help + dont
ANALYZER :::: not equal tokens: help + dont
ANALYZER :::: checking people dont
ANALYZER :::: trick loop: want + dont
ANALYZER :::: trick loop: to + dont
ANALYZER :::: trick loop: help + dont
ANALYZER :::: not equal tokens: people + dont
ANALYZER :::: checking people have
ANALYZER :::: trick loop: want + have
ANALYZER :::: trick loop: to + have
ANALYZER :::: trick loop: help + have
ANALYZER :::: not equal tokens: people + have
ANALYZER :::: checking people money
ANALYZER :::: trick loop: want + money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: help + money
ANALYZER :::: not equal tokens: people + money
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: want + dont
ANALYZER :::: trick loop: to + dont
ANALYZER :::: trick loop: help + dont
ANALYZER :::: trick try: help + dont
ANALYZER :::: not equal tokens: help + dont
ANALYZER :::: checking want they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick try: help + they
ANALYZER :::: not equal tokens: help + they
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking help they
ANALYZER :::: not equal tokens: help + they
ANALYZER :::: finished path check, BREAK!: they
ANALYZER :::: grade: 0
GETGRADE :::: TEACHER :Answer: they dont have money, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 597393a786c7782700f80706
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: choose + dont
ANALYZER :::: trick loop: to + dont
ANALYZER :::: trick loop: volunteer + dont
ANALYZER :::: trick try: volunteer + dont
ANALYZER :::: trick loop: to + dont
ANALYZER :::: trick loop: help + dont
ANALYZER :::: trick try: help + dont
ANALYZER :::: trick loop: people + dont
ANALYZER :::: trick try: people + dont
ANALYZER :::: trick loop: . + dont
ANALYZER :::: not equal tokens: people + dont
ANALYZER :::: checking people dont
ANALYZER :::: trick loop: choose + dont
ANALYZER :::: trick loop: to + dont
ANALYZER :::: trick loop: volunteer + dont
ANALYZER :::: trick loop: to + dont
ANALYZER :::: trick loop: help + dont
ANALYZER :::: trick loop: people + dont
ANALYZER :::: trick loop: . + dont
ANALYZER :::: not equal tokens: people + dont
ANALYZER :::: checking people have
ANALYZER :::: trick loop: choose + have
ANALYZER :::: trick loop: to + have
ANALYZER :::: trick loop: volunteer + have
ANALYZER :::: trick loop: to + have
ANALYZER :::: trick loop: help + have
ANALYZER :::: trick loop: people + have
ANALYZER :::: trick loop: . + have
ANALYZER :::: not equal tokens: people + have
ANALYZER :::: checking people money
ANALYZER :::: trick loop: choose + money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: volunteer + money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: help + money
ANALYZER :::: trick loop: people + money
ANALYZER :::: trick loop: . + money
ANALYZER :::: not equal tokens: people + money
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: choose + dont
ANALYZER :::: trick loop: to + dont
ANALYZER :::: trick loop: volunteer + dont
ANALYZER :::: trick try: volunteer + dont
ANALYZER :::: trick loop: to + dont
ANALYZER :::: trick loop: help + dont
ANALYZER :::: trick try: help + dont
ANALYZER :::: trick loop: people + dont
ANALYZER :::: trick try: people + dont
ANALYZER :::: trick loop: . + dont
ANALYZER :::: not equal tokens: people + dont
ANALYZER :::: checking choose they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: volunteer + they
ANALYZER :::: trick try: volunteer + they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick try: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick try: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: checking to they
ANALYZER :::: trick loop: volunteer + they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking volunteer they
ANALYZER :::: trick loop: to + they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick try: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick try: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking help they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick try: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: checking people they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: finished path check, BREAK!: they
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: they dont have money, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 597393a786c7782700f80706
### grade: 0
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people choose to volunteer because they want money $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: choose
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: volunteer
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: money
ANALYZER :::: Teacher parts: NOUN
GETGRADE :::: TEACHER :Answer: people choose to volunteer because they want money, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 7, Machine Learnable: false, aid: 597393ad86c7782700f80707
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + choose
ANALYZER :::: spelling fixed: choose >> want
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people want to volunteer because they want money $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: volunteer
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: money
ANALYZER :::: Teacher parts: NOUN
----starting new check-----
GETGRADE :::: TEACHER :Answer: people want to volunteer because they want money, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 7, Machine Learnable: false, aid: 5973950886c77804c848a0a5
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking want people
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to want
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking to volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: to + volunteer
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking to want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: to + want
ANALYZER :::: checking to money
ANALYZER :::: trick loop: help + money
ANALYZER :::: not equal tokens: to + money
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people want
ANALYZER :::: trick loop: want + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: trick loop: want + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking want to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking help to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: trick try: help + choose
ANALYZER :::: not equal tokens: help + choose
ANALYZER :::: checking people choose
ANALYZER :::: trick loop: want + choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: not equal tokens: people + choose
ANALYZER :::: checking people to
ANALYZER :::: trick loop: want + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people volunteer
ANALYZER :::: trick loop: want + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: people + volunteer
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: want + want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people they
ANALYZER :::: grade: 1
ANALYZER :::: checking want people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: not equal tokens: help + people
ANALYZER :::: checking want choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: trick try: help + choose
ANALYZER :::: not equal tokens: help + choose
ANALYZER :::: checking want to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: checking want volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: trick try: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking want they
ANALYZER :::: checking want want
ANALYZER :::: passed checkTokens V want + want
ANALYZER :::: passed checkParts V want + want
ANALYZER :::: passed checkRelationToParent V want + want
ANALYZER :::: equal tokens: want + want
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: want want
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: trick loop: help + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking to choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: not equal tokens: to + choose
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking to volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: to + volunteer
ANALYZER :::: checking to they
ANALYZER :::: checking to want
ANALYZER :::: checking to money
ANALYZER :::: trick loop: help + money
ANALYZER :::: not equal tokens: to + money
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: want + choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: trick try: help + choose
ANALYZER :::: not equal tokens: help + choose
ANALYZER :::: checking want people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: not equal tokens: help + people
ANALYZER :::: checking to people
ANALYZER :::: trick loop: help + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking help people
ANALYZER :::: not equal tokens: help + people
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
GETGRADE :::: TEACHER :Answer: people choose to volunteer because they want money, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 7, Machine Learnable: false, aid: 597393ad86c7782700f80707
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking choose people
ANALYZER :::: checking choose choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose choose
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to choose
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking volunteer people
ANALYZER :::: checking volunteer choose
ANALYZER :::: checking volunteer to
ANALYZER :::: checking volunteer volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: volunteer volunteer
ANALYZER :::: grade: 4
ANALYZER :::: checking to people
ANALYZER :::: checking to choose
ANALYZER :::: checking to to
ANALYZER :::: checking to volunteer
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking to want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick loop: people + want
ANALYZER :::: trick loop: . + want
ANALYZER :::: not equal tokens: to + want
ANALYZER :::: checking to money
ANALYZER :::: trick loop: help + money
ANALYZER :::: trick loop: people + money
ANALYZER :::: trick loop: . + money
ANALYZER :::: not equal tokens: to + money
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people choose
ANALYZER :::: checking choose choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: choose choose
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: checking choose to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: volunteer + volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking people volunteer
ANALYZER :::: checking choose volunteer
ANALYZER :::: checking to volunteer
ANALYZER :::: checking volunteer volunteer
ANALYZER :::: passed checkTokens V volunteer + volunteer
ANALYZER :::: passed checkParts V volunteer + volunteer
ANALYZER :::: passed checkRelationToParent V volunteer + volunteer
ANALYZER :::: equal tokens: volunteer + volunteer
ANALYZER :::: there are fathers: choose + choose
ANALYZER :::: passed checkTokens V choose + choose
ANALYZER :::: passed checkParts V choose + choose
ANALYZER :::: passed checkRelationToParent V choose + choose
ANALYZER :::: equal tokens: choose + choose
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: volunteer volunteer
ANALYZER :::: grade: 4
ANALYZER :::: checking people they
ANALYZER :::: checking choose they
ANALYZER :::: checking to they
ANALYZER :::: checking volunteer they
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking help they
ANALYZER :::: trick loop: people + they
ANALYZER :::: trick try: people + they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: checking people they
ANALYZER :::: trick loop: . + they
ANALYZER :::: not equal tokens: people + they
ANALYZER :::: finished path check, BREAK!: they
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: people choose to volunteer because they want money, Wrriten by: STUDENT, Grade: -1, Verified by Teacher: false, Significant Words: 7, Machine Learnable: false, aid: 597393ad86c7782700f80707
### grade: 0
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people want to help $$ google api
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people choose to volunteer to help people. $$ google api
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people need to help $$ google api
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people want to help $$ google api
### LEVENSHTEIN SUCSESS!
### teacher: Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
### student: Answer: because people want to help, Wrriten by: STUDENT, Grade: 100, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973930186c7782700f806ea
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people love to help $$ google api
GETGRADE :::: TEACHER :Answer: because people love to help, Wrriten by: STUDENT, Grade: 95, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973930786c7782700f806eb
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
using map: because people love to help
GETGRADE :::: TEACHER :Answer: because people love to help, Wrriten by: STUDENT, Grade: 95, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973930786c7782700f806eb
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
using map: because people love to help
GETGRADE :::: TEACHER :Answer: because people love to help, Wrriten by: STUDENT, Grade: 95, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973930786c7782700f806eb
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + love
ANALYZER :::: trick loop: to + love
ANALYZER :::: trick loop: help + love
ANALYZER :::: trick try: help + love
ANALYZER :::: not equal tokens: help + love
ANALYZER :::: checking people love
ANALYZER :::: trick loop: need + love
ANALYZER :::: trick loop: to + love
ANALYZER :::: trick loop: help + love
ANALYZER :::: not equal tokens: people + love
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: because people love to help, Wrriten by: STUDENT, Grade: 95, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973930786c7782700f806eb
### grade: 95
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people choose to help $$ google api
GETGRADE :::: TEACHER :Answer: because people choose to help, Wrriten by: STUDENT, Grade: 95, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973930d86c7782700f806ec
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
using map: because people choose to help
GETGRADE :::: TEACHER :Answer: because people choose to help, Wrriten by: STUDENT, Grade: 95, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973930d86c7782700f806ec
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
using map: because people choose to help
GETGRADE :::: TEACHER :Answer: because people choose to help, Wrriten by: STUDENT, Grade: 95, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973930d86c7782700f806ec
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + choose
ANALYZER :::: spelling fixed: choose >> need
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people need to help $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: because people need to help, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973954886c77804c848a0a7
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking need people
ANALYZER :::: checking need need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need need
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to need
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking help people
ANALYZER :::: checking help need
ANALYZER :::: checking help to
ANALYZER :::: checking help help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: help help
ANALYZER :::: grade: 4
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people need
ANALYZER :::: checking need need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need need
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: checking need to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking people help
ANALYZER :::: checking need help
ANALYZER :::: checking to help
ANALYZER :::: checking help help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: help help
ANALYZER :::: grade: 4
----finished new check-----
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: trick try: help + choose
ANALYZER :::: not equal tokens: help + choose
ANALYZER :::: checking people choose
ANALYZER :::: trick loop: need + choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: not equal tokens: people + choose
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: because people choose to help, Wrriten by: STUDENT, Grade: 95, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973930d86c7782700f806ec
### grade: 95
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people want to halp $$ google api
### LEVENSHTEIN SUCSESS!
### teacher: Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
### student: Answer: because people want to halp, Wrriten by: STUDENT, Grade: 100, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973931486c7782700f806ed
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people wants to help $$ google api
### LEVENSHTEIN SUCSESS!
### teacher: Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
### student: Answer: because people wants to help, Wrriten by: STUDENT, Grade: 100, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973931a86c7782700f806ee
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people want to help $$ google api
GETGRADE :::: TEACHER :Answer: people want to help, Wrriten by: STUDENT, Grade: 100, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973931f86c7782700f806ef
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
using map: people want to help
GETGRADE :::: TEACHER :Answer: people want to help, Wrriten by: STUDENT, Grade: 100, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973931f86c7782700f806ef
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
using map: people want to help
GETGRADE :::: TEACHER :Answer: people want to help, Wrriten by: STUDENT, Grade: 100, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973931f86c7782700f806ef
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + want
ANALYZER :::: spelling fixed: want >> need
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people need to help $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: people need to help, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973954986c77804c848a0a8
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking need people
ANALYZER :::: checking need need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need need
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to need
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking help people
ANALYZER :::: checking help need
ANALYZER :::: checking help to
ANALYZER :::: checking help help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: help help
ANALYZER :::: grade: 4
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people need
ANALYZER :::: trick loop: need + need
ANALYZER :::: trick loop: to + need
ANALYZER :::: trick loop: help + need
ANALYZER :::: not equal tokens: people + need
ANALYZER :::: checking need need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need need
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking need to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking need help
ANALYZER :::: spelling fixed: help >> need
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people need to need $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: people need to need, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973954a86c77804c848a0a9
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking need people
ANALYZER :::: checking need need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need need
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to need
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + need
ANALYZER :::: not equal tokens: help + need
ANALYZER :::: checking to need
ANALYZER :::: trick loop: help + need
ANALYZER :::: not equal tokens: to + need
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need help
ANALYZER :::: grade: 4
----finished new check-----
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick try: help + want
ANALYZER :::: spelling fixed: want >> help
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people help to help $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: people help to help, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973954c86c77804c848a0aa
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking need people
ANALYZER :::: checking need help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need help
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to help
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking help people
ANALYZER :::: checking help help
ANALYZER :::: checking help to
ANALYZER :::: checking help help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: help help
ANALYZER :::: grade: 4
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking need help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need help
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking need to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking need help
ANALYZER :::: spelling fixed: help >> need
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people help to need $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: people help to need, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973954c86c77804c848a0ab
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking need people
ANALYZER :::: checking need help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need help
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to help
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + need
ANALYZER :::: not equal tokens: help + need
ANALYZER :::: checking to need
ANALYZER :::: trick loop: help + need
ANALYZER :::: not equal tokens: to + need
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need help
ANALYZER :::: grade: 4
----finished new check-----
ANALYZER :::: not equal tokens: help + want
ANALYZER :::: checking people want
ANALYZER :::: trick loop: need + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: people want to help, Wrriten by: STUDENT, Grade: 100, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973931f86c7782700f806ef
### grade: 100
$$$$$$$$$$$$$$$$$$$$$$$$$$$ they want to help $$ google api
GETGRADE :::: TEACHER :Answer: they want to help, Wrriten by: STUDENT, Grade: 100, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973932586c7782700f806f0
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
using map: they want to help
GETGRADE :::: TEACHER :Answer: they want to help, Wrriten by: STUDENT, Grade: 100, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973932586c7782700f806f0
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
using map: they want to help
GETGRADE :::: TEACHER :Answer: they want to help, Wrriten by: STUDENT, Grade: 100, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973932586c7782700f806f0
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: need + want
ANALYZER :::: spelling fixed: want >> need
$$$$$$$$$$$$$$$$$$$$$$$$$$$ they need to help $$ google api
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: they need to help, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973954e86c77804c848a0ac
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people they
ANALYZER :::: grade: 1
ANALYZER :::: checking need they
ANALYZER :::: checking need need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need need
ANALYZER :::: grade: 2
ANALYZER :::: checking to they
ANALYZER :::: checking to need
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking help they
ANALYZER :::: checking help need
ANALYZER :::: checking help to
ANALYZER :::: checking help help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: help help
ANALYZER :::: grade: 4
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people they
ANALYZER :::: grade: 1
ANALYZER :::: checking people need
ANALYZER :::: trick loop: need + need
ANALYZER :::: trick loop: to + need
ANALYZER :::: trick loop: help + need
ANALYZER :::: not equal tokens: people + need
ANALYZER :::: checking need need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need need
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking need to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking need help
ANALYZER :::: spelling fixed: help >> need
$$$$$$$$$$$$$$$$$$$$$$$$$$$ they need to need $$ google api
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: they need to need, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973955086c77804c848a0ad
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people they
ANALYZER :::: grade: 1
ANALYZER :::: checking need they
ANALYZER :::: checking need need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need need
ANALYZER :::: grade: 2
ANALYZER :::: checking to they
ANALYZER :::: checking to need
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + need
ANALYZER :::: not equal tokens: help + need
ANALYZER :::: checking to need
ANALYZER :::: trick loop: help + need
ANALYZER :::: not equal tokens: to + need
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need help
ANALYZER :::: grade: 4
----finished new check-----
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick try: help + want
ANALYZER :::: spelling fixed: want >> help
$$$$$$$$$$$$$$$$$$$$$$$$$$$ they help to help $$ google api
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: they help to help, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973955186c77804c848a0ae
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people they
ANALYZER :::: grade: 1
ANALYZER :::: checking need they
ANALYZER :::: checking need help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need help
ANALYZER :::: grade: 2
ANALYZER :::: checking to they
ANALYZER :::: checking to help
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking help they
ANALYZER :::: checking help help
ANALYZER :::: checking help to
ANALYZER :::: checking help help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: help help
ANALYZER :::: grade: 4
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people they
ANALYZER :::: grade: 1
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking need help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need help
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking need to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking need help
ANALYZER :::: spelling fixed: help >> need
$$$$$$$$$$$$$$$$$$$$$$$$$$$ they help to need $$ google api
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: they help to need, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973955186c77804c848a0af
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people they
ANALYZER :::: grade: 1
ANALYZER :::: checking need they
ANALYZER :::: checking need help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need help
ANALYZER :::: grade: 2
ANALYZER :::: checking to they
ANALYZER :::: checking to help
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + need
ANALYZER :::: not equal tokens: help + need
ANALYZER :::: checking to need
ANALYZER :::: trick loop: help + need
ANALYZER :::: not equal tokens: to + need
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need help
ANALYZER :::: grade: 4
----finished new check-----
ANALYZER :::: not equal tokens: help + want
ANALYZER :::: checking people want
ANALYZER :::: trick loop: need + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: they want to help, Wrriten by: STUDENT, Grade: 100, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973932586c7782700f806f0
### grade: 100
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because the people want to help $$ google api
GETGRADE :::: TEACHER :Answer: because the people want to help, Wrriten by: STUDENT, Grade: 100, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973932a86c7782700f806f1
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
using map: because the people want to help
GETGRADE :::: TEACHER :Answer: because the people want to help, Wrriten by: STUDENT, Grade: 100, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973932a86c7782700f806f1
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
using map: because the people want to help
GETGRADE :::: TEACHER :Answer: because the people want to help, Wrriten by: STUDENT, Grade: 100, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973932a86c7782700f806f1
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + want
ANALYZER :::: spelling fixed: want >> need
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because the people need to help $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: because the people need to help, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973955386c77804c848a0b0
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking need people
ANALYZER :::: checking need need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need need
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to need
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking help people
ANALYZER :::: checking help need
ANALYZER :::: checking help to
ANALYZER :::: checking help help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: help help
ANALYZER :::: grade: 4
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people need
ANALYZER :::: trick loop: need + need
ANALYZER :::: trick loop: to + need
ANALYZER :::: trick loop: help + need
ANALYZER :::: not equal tokens: people + need
ANALYZER :::: checking need need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need need
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking need to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking need help
ANALYZER :::: spelling fixed: help >> need
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because the people need to need $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: because the people need to need, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973955386c77804c848a0b1
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking need people
ANALYZER :::: checking need need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need need
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to need
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + need
ANALYZER :::: not equal tokens: help + need
ANALYZER :::: checking to need
ANALYZER :::: trick loop: help + need
ANALYZER :::: not equal tokens: to + need
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need help
ANALYZER :::: grade: 4
----finished new check-----
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick try: help + want
ANALYZER :::: spelling fixed: want >> help
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because the people help to help $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: because the people help to help, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973955486c77804c848a0b2
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking need people
ANALYZER :::: checking need help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need help
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to help
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking help people
ANALYZER :::: checking help help
ANALYZER :::: checking help to
ANALYZER :::: checking help help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: help help
ANALYZER :::: grade: 4
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking need help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need help
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking need to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking need help
ANALYZER :::: spelling fixed: help >> need
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because the people help to need $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: because the people help to need, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973955486c77804c848a0b3
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking need people
ANALYZER :::: checking need help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need help
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to help
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + need
ANALYZER :::: not equal tokens: help + need
ANALYZER :::: checking to need
ANALYZER :::: trick loop: help + need
ANALYZER :::: not equal tokens: to + need
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need help
ANALYZER :::: grade: 4
----finished new check-----
ANALYZER :::: not equal tokens: help + want
ANALYZER :::: checking people want
ANALYZER :::: trick loop: need + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: because the people want to help, Wrriten by: STUDENT, Grade: 100, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973932a86c7782700f806f1
### grade: 100
$$$$$$$$$$$$$$$$$$$$$$$$$$$ thats because people want to help people $$ google api
GETGRADE :::: TEACHER :Answer: thats because people want to help people, Wrriten by: STUDENT, Grade: 100, Verified by Teacher: false, Significant Words: 6, Machine Learnable: false, aid: 5973933286c7782700f806f2
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
using map: thats because people want to help people
GETGRADE :::: TEACHER :Answer: thats because people want to help people, Wrriten by: STUDENT, Grade: 100, Verified by Teacher: false, Significant Words: 6, Machine Learnable: false, aid: 5973933286c7782700f806f2
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
using map: thats because people want to help people
GETGRADE :::: TEACHER :Answer: thats because people want to help people, Wrriten by: STUDENT, Grade: 100, Verified by Teacher: false, Significant Words: 6, Machine Learnable: false, aid: 5973933286c7782700f806f2
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people thats
ANALYZER :::: trick loop: need + thats
ANALYZER :::: trick loop: to + thats
ANALYZER :::: trick loop: help + thats
ANALYZER :::: not equal tokens: people + thats
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + want
ANALYZER :::: spelling fixed: want >> need
$$$$$$$$$$$$$$$$$$$$$$$$$$$ thats because people need to help people $$ google api
ANALYZER :::: Teacher parts: thats
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
----starting new check-----
GETGRADE :::: TEACHER :Answer: thats because people need to help people, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 6, Machine Learnable: false, aid: 5973955586c77804c848a0b4
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people thats
ANALYZER :::: trick loop: need + thats
ANALYZER :::: trick loop: to + thats
ANALYZER :::: trick loop: help + thats
ANALYZER :::: not equal tokens: people + thats
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking need thats
ANALYZER :::: trick loop: to + thats
ANALYZER :::: trick loop: help + thats
ANALYZER :::: trick try: help + thats
ANALYZER :::: not equal tokens: help + thats
ANALYZER :::: checking need people
ANALYZER :::: checking need need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need need
ANALYZER :::: grade: 2
ANALYZER :::: checking to thats
ANALYZER :::: trick loop: help + thats
ANALYZER :::: not equal tokens: to + thats
ANALYZER :::: checking to people
ANALYZER :::: checking to need
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking help thats
ANALYZER :::: not equal tokens: help + thats
ANALYZER :::: checking help people
ANALYZER :::: checking help need
ANALYZER :::: checking help to
ANALYZER :::: checking help help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: help help
ANALYZER :::: grade: 4
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people thats
ANALYZER :::: trick loop: need + thats
ANALYZER :::: trick loop: to + thats
ANALYZER :::: trick loop: help + thats
ANALYZER :::: not equal tokens: people + thats
ANALYZER :::: checking need thats
ANALYZER :::: trick loop: to + thats
ANALYZER :::: trick loop: help + thats
ANALYZER :::: trick try: help + thats
ANALYZER :::: not equal tokens: help + thats
ANALYZER :::: checking to thats
ANALYZER :::: trick loop: help + thats
ANALYZER :::: not equal tokens: to + thats
ANALYZER :::: checking help thats
ANALYZER :::: not equal tokens: help + thats
ANALYZER :::: finished path check, BREAK!: thats
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick try: help + want
ANALYZER :::: spelling fixed: want >> help
$$$$$$$$$$$$$$$$$$$$$$$$$$$ thats because people help to help people $$ google api
ANALYZER :::: Teacher parts: thats
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
----starting new check-----
GETGRADE :::: TEACHER :Answer: thats because people help to help people, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 6, Machine Learnable: false, aid: 5973955686c77804c848a0b5
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people thats
ANALYZER :::: trick loop: need + thats
ANALYZER :::: trick loop: to + thats
ANALYZER :::: trick loop: help + thats
ANALYZER :::: not equal tokens: people + thats
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: not equal tokens: help + help
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: need + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: not equal tokens: help + want
ANALYZER :::: checking people want
ANALYZER :::: trick loop: need + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: need + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: thats because people want to help people, Wrriten by: STUDENT, Grade: 100, Verified by Teacher: false, Significant Words: 6, Machine Learnable: false, aid: 5973933286c7782700f806f2
### grade: 100
$$$$$$$$$$$$$$$$$$$$$$$$$$$ want to help $$ google api
GETGRADE :::: TEACHER :Answer: want to help, Wrriten by: STUDENT, Grade: 95, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973933786c7782700f806f3
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
using map: want to help
GETGRADE :::: TEACHER :Answer: want to help, Wrriten by: STUDENT, Grade: 95, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973933786c7782700f806f3
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
using map: want to help
GETGRADE :::: TEACHER :Answer: want to help, Wrriten by: STUDENT, Grade: 95, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973933786c7782700f806f3
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people want
ANALYZER :::: trick loop: need + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: want to help, Wrriten by: STUDENT, Grade: 95, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973933786c7782700f806f3
### grade: 95
$$$$$$$$$$$$$$$$$$$$$$$$$$$ to help $$ google api
GETGRADE :::: TEACHER :Answer: to help, Wrriten by: STUDENT, Grade: 90, Verified by Teacher: false, Significant Words: 2, Machine Learnable: false, aid: 5973933c86c7782700f806f4
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
using map: to help
GETGRADE :::: TEACHER :Answer: to help, Wrriten by: STUDENT, Grade: 90, Verified by Teacher: false, Significant Words: 2, Machine Learnable: false, aid: 5973933c86c7782700f806f4
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
using map: to help
GETGRADE :::: TEACHER :Answer: to help, Wrriten by: STUDENT, Grade: 90, Verified by Teacher: false, Significant Words: 2, Machine Learnable: false, aid: 5973933c86c7782700f806f4
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: to help, Wrriten by: STUDENT, Grade: 90, Verified by Teacher: false, Significant Words: 2, Machine Learnable: false, aid: 5973933c86c7782700f806f4
### grade: 90
$$$$$$$$$$$$$$$$$$$$$$$$$$$ to help people $$ google api
GETGRADE :::: TEACHER :Answer: to help people, Wrriten by: STUDENT, Grade: 80, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973934186c7782700f806f5
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
using map: to help people
GETGRADE :::: TEACHER :Answer: to help people, Wrriten by: STUDENT, Grade: 80, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973934186c7782700f806f5
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
using map: to help people
GETGRADE :::: TEACHER :Answer: to help people, Wrriten by: STUDENT, Grade: 80, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973934186c7782700f806f5
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: trick loop: need + people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: not equal tokens: people + people
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: to help people, Wrriten by: STUDENT, Grade: 80, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973934186c7782700f806f5
### grade: 80
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people choose to volunteer because they want to help. $$ google api
GETGRADE :::: TEACHER :Answer: people choose to volunteer because they want to help., Wrriten by: STUDENT, Grade: 100, Verified by Teacher: false, Significant Words: 8, Machine Learnable: false, aid: 5973934886c7782700f806f6
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
using map: people choose to volunteer because they want to help.
GETGRADE :::: TEACHER :Answer: people choose to volunteer because they want to help., Wrriten by: STUDENT, Grade: 100, Verified by Teacher: false, Significant Words: 8, Machine Learnable: false, aid: 5973934886c7782700f806f6
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
using map: people choose to volunteer because they want to help.
GETGRADE :::: TEACHER :Answer: people choose to volunteer because they want to help., Wrriten by: STUDENT, Grade: 100, Verified by Teacher: false, Significant Words: 8, Machine Learnable: false, aid: 5973934886c7782700f806f6
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + choose
ANALYZER :::: spelling fixed: choose >> need
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people need to volunteer because they want to help. $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: volunteer
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: people need to volunteer because they want to help., Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 8, Machine Learnable: false, aid: 5973955886c77804c848a0b6
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking need people
ANALYZER :::: checking need need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need need
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to need
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking to volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: to + volunteer
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking to want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: to + want
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + want
ANALYZER :::: spelling fixed: want >> need
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people need to volunteer because they need to help. $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: volunteer
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: people need to volunteer because they need to help., Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 8, Machine Learnable: false, aid: 5973955986c77804c848a0b7
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking need people
ANALYZER :::: checking need need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need need
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to need
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking to volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: to + volunteer
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking to need
ANALYZER :::: trick loop: help + need
ANALYZER :::: not equal tokens: to + need
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking help people
ANALYZER :::: checking help need
ANALYZER :::: checking help to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: checking help volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking help they
ANALYZER :::: not equal tokens: help + they
ANALYZER :::: checking help need
ANALYZER :::: spelling fixed: need >> help
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people need to volunteer because they help to help. $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: volunteer
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: people need to volunteer because they help to help., Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 8, Machine Learnable: false, aid: 5973955b86c77804c848a0b8
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking need people
ANALYZER :::: checking need need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need need
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to need
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking to volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: to + volunteer
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking to help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: to + help
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: not equal tokens: help + help
ANALYZER :::: checking to help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: to + help
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: not equal tokens: help + need
ANALYZER :::: checking help to
ANALYZER :::: checking help help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: help help
ANALYZER :::: grade: 4
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking people need
ANALYZER :::: trick loop: need + need
ANALYZER :::: trick loop: to + need
ANALYZER :::: trick loop: help + need
ANALYZER :::: not equal tokens: people + need
ANALYZER :::: checking need need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need need
ANALYZER :::: grade: 2
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking need to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking help to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick try: help + want
ANALYZER :::: not equal tokens: help + want
ANALYZER :::: checking to help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: to + help
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: trick try: help + choose
ANALYZER :::: not equal tokens: help + choose
ANALYZER :::: checking people choose
ANALYZER :::: trick loop: need + choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: not equal tokens: people + choose
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people volunteer
ANALYZER :::: trick loop: need + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: people + volunteer
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: need + want
ANALYZER :::: spelling fixed: want >> need
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people choose to volunteer because they need to help. $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: choose
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: volunteer
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: people choose to volunteer because they need to help., Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 8, Machine Learnable: false, aid: 5973955c86c77804c848a0b9
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: trick try: help + choose
ANALYZER :::: not equal tokens: help + choose
ANALYZER :::: checking people choose
ANALYZER :::: trick loop: need + choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: not equal tokens: people + choose
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people volunteer
ANALYZER :::: trick loop: need + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: people + volunteer
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people they
ANALYZER :::: grade: 1
ANALYZER :::: checking need people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: not equal tokens: help + people
ANALYZER :::: checking need choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: trick try: help + choose
ANALYZER :::: not equal tokens: help + choose
ANALYZER :::: checking need to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: checking need volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: trick try: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking need they
ANALYZER :::: checking need need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need need
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: trick loop: help + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking to choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: not equal tokens: to + choose
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking to volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: to + volunteer
ANALYZER :::: checking to they
ANALYZER :::: checking to need
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: to to
ANALYZER :::: grade: 3
ANALYZER :::: checking help people
ANALYZER :::: not equal tokens: help + people
ANALYZER :::: checking help choose
ANALYZER :::: not equal tokens: help + choose
ANALYZER :::: checking help to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: checking help volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking help they
ANALYZER :::: checking help need
ANALYZER :::: checking help to
ANALYZER :::: checking help help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: help help
ANALYZER :::: grade: 4
ANALYZER :::: STUDENT SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: trick try: help + choose
ANALYZER :::: not equal tokens: help + choose
ANALYZER :::: checking need people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: not equal tokens: help + people
ANALYZER :::: checking to people
ANALYZER :::: trick loop: help + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking help people
ANALYZER :::: not equal tokens: help + people
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick try: help + want
ANALYZER :::: spelling fixed: want >> help
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people choose to volunteer because they help to help. $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: choose
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: volunteer
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: people choose to volunteer because they help to help., Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 8, Machine Learnable: false, aid: 5973955d86c77804c848a0ba
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: trick try: help + choose
ANALYZER :::: not equal tokens: help + choose
ANALYZER :::: checking people choose
ANALYZER :::: trick loop: need + choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: not equal tokens: people + choose
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people volunteer
ANALYZER :::: trick loop: need + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: people + volunteer
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: not equal tokens: help + help
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: not equal tokens: help + want
ANALYZER :::: checking people want
ANALYZER :::: trick loop: need + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: people choose to volunteer because they want to help., Wrriten by: STUDENT, Grade: 100, Verified by Teacher: false, Significant Words: 8, Machine Learnable: false, aid: 5973934886c7782700f806f6
### grade: 100
$$$$$$$$$$$$$$$$$$$$$$$$$$$ they choose to volunteer to help. $$ google api
GETGRADE :::: TEACHER :Answer: they choose to volunteer to help., Wrriten by: STUDENT, Grade: 95, Verified by Teacher: false, Significant Words: 6, Machine Learnable: false, aid: 5973934f86c7782700f806f7
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
using map: they choose to volunteer to help.
GETGRADE :::: TEACHER :Answer: they choose to volunteer to help., Wrriten by: STUDENT, Grade: 95, Verified by Teacher: false, Significant Words: 6, Machine Learnable: false, aid: 5973934f86c7782700f806f7
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
using map: they choose to volunteer to help.
GETGRADE :::: TEACHER :Answer: they choose to volunteer to help., Wrriten by: STUDENT, Grade: 95, Verified by Teacher: false, Significant Words: 6, Machine Learnable: false, aid: 5973934f86c7782700f806f7
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: need + choose
ANALYZER :::: spelling fixed: choose >> need
$$$$$$$$$$$$$$$$$$$$$$$$$$$ they need to volunteer to help. $$ google api
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: volunteer
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
----starting new check-----
GETGRADE :::: TEACHER :Answer: they need to volunteer to help., Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 6, Machine Learnable: false, aid: 5973955e86c77804c848a0bb
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people they
ANALYZER :::: grade: 1
ANALYZER :::: checking need they
ANALYZER :::: checking need need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need need
ANALYZER :::: grade: 2
ANALYZER :::: checking to they
ANALYZER :::: checking to need
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking to volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: to + volunteer
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: there are fathers: need + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: trick try: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking to help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: to + help
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: trick try: help + choose
ANALYZER :::: not equal tokens: help + choose
ANALYZER :::: checking people choose
ANALYZER :::: trick loop: need + choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: not equal tokens: people + choose
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people volunteer
ANALYZER :::: trick loop: need + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: people + volunteer
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: they choose to volunteer to help., Wrriten by: STUDENT, Grade: 95, Verified by Teacher: false, Significant Words: 6, Machine Learnable: false, aid: 5973934f86c7782700f806f7
### grade: 95
$$$$$$$$$$$$$$$$$$$$$$$$$$$ they volunteer to help $$ google api
GETGRADE :::: TEACHER :Answer: they volunteer to help, Wrriten by: STUDENT, Grade: 85, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973935486c7782700f806f8
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
using map: they volunteer to help
GETGRADE :::: TEACHER :Answer: they volunteer to help, Wrriten by: STUDENT, Grade: 85, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973935486c7782700f806f8
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
using map: they volunteer to help
GETGRADE :::: TEACHER :Answer: they volunteer to help, Wrriten by: STUDENT, Grade: 85, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973935486c7782700f806f8
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: need + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: trick try: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking people volunteer
ANALYZER :::: trick loop: need + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: people + volunteer
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: they volunteer to help, Wrriten by: STUDENT, Grade: 85, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973935486c7782700f806f8
### grade: 85
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people volunteer to help. $$ google api
GETGRADE :::: TEACHER :Answer: people volunteer to help., Wrriten by: STUDENT, Grade: 85, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973935986c7782700f806f9
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
using map: people volunteer to help.
GETGRADE :::: TEACHER :Answer: people volunteer to help., Wrriten by: STUDENT, Grade: 85, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973935986c7782700f806f9
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
using map: people volunteer to help.
GETGRADE :::: TEACHER :Answer: people volunteer to help., Wrriten by: STUDENT, Grade: 85, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973935986c7782700f806f9
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: trick try: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking people volunteer
ANALYZER :::: trick loop: need + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: people + volunteer
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: people volunteer to help., Wrriten by: STUDENT, Grade: 85, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973935986c7782700f806f9
### grade: 85
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people need to help $$ google api
### LEVENSHTEIN SUCSESS!
### teacher: Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
### student: Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
$$$$$$$$$$$$$$$$$$$$$$$$$$$ they love to volunteer $$ google api
GETGRADE :::: TEACHER :Answer: they love to volunteer, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973936686c7782700f806fb
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
using map: they love to volunteer
GETGRADE :::: TEACHER :Answer: they love to volunteer, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973936686c7782700f806fb
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
using map: they love to volunteer
GETGRADE :::: TEACHER :Answer: they love to volunteer, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973936686c7782700f806fb
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: need + love
ANALYZER :::: trick loop: to + love
ANALYZER :::: trick loop: help + love
ANALYZER :::: trick try: help + love
ANALYZER :::: not equal tokens: help + love
ANALYZER :::: checking people love
ANALYZER :::: trick loop: need + love
ANALYZER :::: trick loop: to + love
ANALYZER :::: trick loop: help + love
ANALYZER :::: not equal tokens: people + love
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people volunteer
ANALYZER :::: trick loop: need + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: people + volunteer
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: they love to volunteer, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973936686c7782700f806fb
### grade: 0
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because the people want to fly $$ google api
GETGRADE :::: TEACHER :Answer: because the people want to fly, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973936c86c7782700f806fc
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
using map: because the people want to fly
GETGRADE :::: TEACHER :Answer: because the people want to fly, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973936c86c7782700f806fc
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
using map: because the people want to fly
GETGRADE :::: TEACHER :Answer: because the people want to fly, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973936c86c7782700f806fc
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick try: help + want
ANALYZER :::: not equal tokens: help + want
ANALYZER :::: checking people want
ANALYZER :::: trick loop: need + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people fly
ANALYZER :::: trick loop: need + fly
ANALYZER :::: trick loop: to + fly
ANALYZER :::: trick loop: help + fly
ANALYZER :::: not equal tokens: people + fly
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: because the people want to fly, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973936c86c7782700f806fc
### grade: 0
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because the people want money $$ google api
GETGRADE :::: TEACHER :Answer: because the people want money, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973937286c7782700f806fd
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
using map: because the people want money
GETGRADE :::: TEACHER :Answer: because the people want money, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973937286c7782700f806fd
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
using map: because the people want money
GETGRADE :::: TEACHER :Answer: because the people want money, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973937286c7782700f806fd
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + want
ANALYZER :::: spelling fixed: want >> need
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because the people need money $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: money
ANALYZER :::: Teacher parts: NOUN
----starting new check-----
GETGRADE :::: TEACHER :Answer: because the people need money, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973956186c77804c848a0bc
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking need people
ANALYZER :::: checking need need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need need
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to need
ANALYZER :::: checking to money
ANALYZER :::: trick loop: help + money
ANALYZER :::: not equal tokens: to + money
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick try: help + want
ANALYZER :::: spelling fixed: want >> help
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because the people help money $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: money
ANALYZER :::: Teacher parts: NOUN
----starting new check-----
GETGRADE :::: TEACHER :Answer: because the people help money, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973956286c77804c848a0bd
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking need people
ANALYZER :::: checking need help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need help
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to help
ANALYZER :::: checking to money
ANALYZER :::: trick loop: help + money
ANALYZER :::: not equal tokens: to + money
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: not equal tokens: help + want
ANALYZER :::: checking people want
ANALYZER :::: trick loop: need + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people money
ANALYZER :::: trick loop: need + money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: help + money
ANALYZER :::: not equal tokens: people + money
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: because the people want money, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973937286c7782700f806fd
### grade: 0
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because the apes want to help $$ google api
GETGRADE :::: TEACHER :Answer: because the apes want to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973937886c7782700f806fe
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
using map: because the apes want to help
GETGRADE :::: TEACHER :Answer: because the apes want to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973937886c7782700f806fe
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
using map: because the apes want to help
GETGRADE :::: TEACHER :Answer: because the apes want to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973937886c7782700f806fe
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people apes
ANALYZER :::: trick loop: need + apes
ANALYZER :::: trick loop: to + apes
ANALYZER :::: trick loop: help + apes
ANALYZER :::: not equal tokens: people + apes
ANALYZER :::: checking people want
ANALYZER :::: trick loop: need + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: because the apes want to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973937886c7782700f806fe
### grade: 0
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because he want to help $$ google api
GETGRADE :::: TEACHER :Answer: because he want to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973937f86c7782700f806ff
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
using map: because he want to help
GETGRADE :::: TEACHER :Answer: because he want to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973937f86c7782700f806ff
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
using map: because he want to help
GETGRADE :::: TEACHER :Answer: because he want to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973937f86c7782700f806ff
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people he
ANALYZER :::: trick loop: need + he
ANALYZER :::: trick loop: to + he
ANALYZER :::: trick loop: help + he
ANALYZER :::: not equal tokens: people + he
ANALYZER :::: checking people want
ANALYZER :::: trick loop: need + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: because he want to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973937f86c7782700f806ff
### grade: 0
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because he wants to help $$ google api
GETGRADE :::: TEACHER :Answer: because he wants to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973938386c7782700f80700
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
using map: because he wants to help
GETGRADE :::: TEACHER :Answer: because he wants to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973938386c7782700f80700
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
using map: because he wants to help
GETGRADE :::: TEACHER :Answer: because he wants to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973938386c7782700f80700
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people he
ANALYZER :::: trick loop: need + he
ANALYZER :::: trick loop: to + he
ANALYZER :::: trick loop: help + he
ANALYZER :::: not equal tokens: people + he
ANALYZER :::: checking people wants
ANALYZER :::: trick loop: need + wants
ANALYZER :::: trick loop: to + wants
ANALYZER :::: trick loop: help + wants
ANALYZER :::: not equal tokens: people + wants
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: because he wants to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973938386c7782700f80700
### grade: 0
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because the people have to help $$ google api
GETGRADE :::: TEACHER :Answer: because the people have to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973938a86c7782700f80701
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
using map: because the people have to help
GETGRADE :::: TEACHER :Answer: because the people have to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973938a86c7782700f80701
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
using map: because the people have to help
GETGRADE :::: TEACHER :Answer: because the people have to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973938a86c7782700f80701
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + have
ANALYZER :::: trick loop: to + have
ANALYZER :::: trick loop: help + have
ANALYZER :::: trick try: help + have
ANALYZER :::: not equal tokens: help + have
ANALYZER :::: checking people have
ANALYZER :::: trick loop: need + have
ANALYZER :::: trick loop: to + have
ANALYZER :::: trick loop: help + have
ANALYZER :::: not equal tokens: people + have
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: because the people have to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 5973938a86c7782700f80701
### grade: 0
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people want help $$ google api
GETGRADE :::: TEACHER :Answer: because people want help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973939186c7782700f80702
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
using map: because people want help
GETGRADE :::: TEACHER :Answer: because people want help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973939186c7782700f80702
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
using map: because people want help
GETGRADE :::: TEACHER :Answer: because people want help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973939186c7782700f80702
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + want
ANALYZER :::: spelling fixed: want >> need
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people need help $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: NOUN
----starting new check-----
GETGRADE :::: TEACHER :Answer: because people need help, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973956586c77804c848a0be
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking need people
ANALYZER :::: checking need need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need need
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to need
ANALYZER :::: checking to help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: to + help
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick try: help + want
ANALYZER :::: spelling fixed: want >> help
$$$$$$$$$$$$$$$$$$$$$$$$$$$ because people help help $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: NOUN
----starting new check-----
GETGRADE :::: TEACHER :Answer: because people help help, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973956586c77804c848a0bf
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking need people
ANALYZER :::: checking need help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: passed checkRelationToParent V help + help
ANALYZER :::: equal tokens: help + help
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need help
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to help
ANALYZER :::: checking to help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: to + help
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: not equal tokens: help + want
ANALYZER :::: checking people want
ANALYZER :::: trick loop: need + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: because people want help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973939186c7782700f80702
### grade: 0
$$$$$$$$$$$$$$$$$$$$$$$$$$$ they are bored $$ google api
GETGRADE :::: TEACHER :Answer: they are bored, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973939886c7782700f80703
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
using map: they are bored
GETGRADE :::: TEACHER :Answer: they are bored, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973939886c7782700f80703
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
using map: they are bored
GETGRADE :::: TEACHER :Answer: they are bored, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973939886c7782700f80703
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: need + are
ANALYZER :::: trick loop: to + are
ANALYZER :::: trick loop: help + are
ANALYZER :::: trick try: help + are
ANALYZER :::: not equal tokens: help + are
ANALYZER :::: checking people are
ANALYZER :::: trick loop: need + are
ANALYZER :::: trick loop: to + are
ANALYZER :::: trick loop: help + are
ANALYZER :::: not equal tokens: people + are
ANALYZER :::: checking people bored
ANALYZER :::: trick loop: need + bored
ANALYZER :::: trick loop: to + bored
ANALYZER :::: trick loop: help + bored
ANALYZER :::: not equal tokens: people + bored
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: they are bored, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 5973939886c7782700f80703
### grade: 0
$$$$$$$$$$$$$$$$$$$$$$$$$$$ they are working for their own free will $$ google api
GETGRADE :::: TEACHER :Answer: they are working for their own free will, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 7, Machine Learnable: false, aid: 5973939e86c7782700f80704
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
using map: they are working for their own free will
GETGRADE :::: TEACHER :Answer: they are working for their own free will, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 7, Machine Learnable: false, aid: 5973939e86c7782700f80704
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
using map: they are working for their own free will
GETGRADE :::: TEACHER :Answer: they are working for their own free will, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 7, Machine Learnable: false, aid: 5973939e86c7782700f80704
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: need + working
ANALYZER :::: trick loop: to + working
ANALYZER :::: trick loop: help + working
ANALYZER :::: trick try: help + working
ANALYZER :::: spelling fixed: working >> help
$$$$$$$$$$$$$$$$$$$$$$$$$$$ they are help for their own free will $$ google api
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: are
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: their
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: own
ANALYZER :::: Teacher parts: ADJ
ANALYZER :::: Teacher parts: free
ANALYZER :::: Teacher parts: ADJ
ANALYZER :::: Teacher parts: will
ANALYZER :::: Teacher parts: NOUN
----starting new check-----
GETGRADE :::: TEACHER :Answer: they are help for their own free will, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 7, Machine Learnable: false, aid: 5973956786c77804c848a0c0
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: need + are
ANALYZER :::: trick loop: to + are
ANALYZER :::: trick loop: help + are
ANALYZER :::: trick try: help + are
ANALYZER :::: not equal tokens: help + are
ANALYZER :::: checking people are
ANALYZER :::: trick loop: need + are
ANALYZER :::: trick loop: to + are
ANALYZER :::: trick loop: help + are
ANALYZER :::: not equal tokens: people + are
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking people their
ANALYZER :::: trick loop: need + their
ANALYZER :::: trick loop: to + their
ANALYZER :::: trick loop: help + their
ANALYZER :::: not equal tokens: people + their
ANALYZER :::: checking people own
ANALYZER :::: trick loop: need + own
ANALYZER :::: trick loop: to + own
ANALYZER :::: trick loop: help + own
ANALYZER :::: not equal tokens: people + own
ANALYZER :::: checking people free
ANALYZER :::: trick loop: need + free
ANALYZER :::: trick loop: to + free
ANALYZER :::: trick loop: help + free
ANALYZER :::: not equal tokens: people + free
ANALYZER :::: checking people will
ANALYZER :::: trick loop: need + will
ANALYZER :::: trick loop: to + will
ANALYZER :::: trick loop: help + will
ANALYZER :::: not equal tokens: people + will
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: not equal tokens: help + working
ANALYZER :::: checking people are
ANALYZER :::: trick loop: need + are
ANALYZER :::: trick loop: to + are
ANALYZER :::: trick loop: help + are
ANALYZER :::: not equal tokens: people + are
ANALYZER :::: checking people working
ANALYZER :::: trick loop: need + working
ANALYZER :::: trick loop: to + working
ANALYZER :::: trick loop: help + working
ANALYZER :::: not equal tokens: people + working
ANALYZER :::: checking people their
ANALYZER :::: trick loop: need + their
ANALYZER :::: trick loop: to + their
ANALYZER :::: trick loop: help + their
ANALYZER :::: not equal tokens: people + their
ANALYZER :::: checking people own
ANALYZER :::: trick loop: need + own
ANALYZER :::: trick loop: to + own
ANALYZER :::: trick loop: help + own
ANALYZER :::: not equal tokens: people + own
ANALYZER :::: checking people free
ANALYZER :::: trick loop: need + free
ANALYZER :::: trick loop: to + free
ANALYZER :::: trick loop: help + free
ANALYZER :::: not equal tokens: people + free
ANALYZER :::: checking people will
ANALYZER :::: trick loop: need + will
ANALYZER :::: trick loop: to + will
ANALYZER :::: trick loop: help + will
ANALYZER :::: not equal tokens: people + will
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: they are working for their own free will, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 7, Machine Learnable: false, aid: 5973939e86c7782700f80704
### grade: 0
$$$$$$$$$$$$$$$$$$$$$$$$$$$ the people need money $$ google api
GETGRADE :::: TEACHER :Answer: the people need money, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 597393a286c7782700f80705
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
using map: the people need money
GETGRADE :::: TEACHER :Answer: the people need money, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 597393a286c7782700f80705
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
using map: the people need money
GETGRADE :::: TEACHER :Answer: the people need money, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 597393a286c7782700f80705
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking need people
ANALYZER :::: checking need need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need need
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to need
ANALYZER :::: checking to money
ANALYZER :::: trick loop: help + money
ANALYZER :::: not equal tokens: to + money
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: the people need money, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 3, Machine Learnable: false, aid: 597393a286c7782700f80705
### grade: 0
$$$$$$$$$$$$$$$$$$$$$$$$$$$ they dont have money $$ google api
GETGRADE :::: TEACHER :Answer: they dont have money, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 597393a786c7782700f80706
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
using map: they dont have money
GETGRADE :::: TEACHER :Answer: they dont have money, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 597393a786c7782700f80706
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
using map: they dont have money
GETGRADE :::: TEACHER :Answer: they dont have money, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 597393a786c7782700f80706
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: need + dont
ANALYZER :::: trick loop: to + dont
ANALYZER :::: trick loop: help + dont
ANALYZER :::: trick try: help + dont
ANALYZER :::: not equal tokens: help + dont
ANALYZER :::: checking people dont
ANALYZER :::: trick loop: need + dont
ANALYZER :::: trick loop: to + dont
ANALYZER :::: trick loop: help + dont
ANALYZER :::: not equal tokens: people + dont
ANALYZER :::: checking people have
ANALYZER :::: trick loop: need + have
ANALYZER :::: trick loop: to + have
ANALYZER :::: trick loop: help + have
ANALYZER :::: not equal tokens: people + have
ANALYZER :::: checking people money
ANALYZER :::: trick loop: need + money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: help + money
ANALYZER :::: not equal tokens: people + money
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: they dont have money, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 4, Machine Learnable: false, aid: 597393a786c7782700f80706
### grade: 0
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people choose to volunteer because they want money $$ google api
GETGRADE :::: TEACHER :Answer: people choose to volunteer because they want money, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 7, Machine Learnable: false, aid: 597393ad86c7782700f80707
GETGRADE :::: STUDENT :Answer: because people want to help, Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 59738bff86c7780c6c463585
using map: people choose to volunteer because they want money
GETGRADE :::: TEACHER :Answer: people choose to volunteer because they want money, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 7, Machine Learnable: false, aid: 597393ad86c7782700f80707
GETGRADE :::: STUDENT :Answer: people choose to volunteer to help people., Wrriten by: TEACHER, Grade: 100, Verified by Teacher: true, Significant Words: 7, Machine Learnable: true, aid: 59738c0886c7780c6c463586
using map: people choose to volunteer because they want money
GETGRADE :::: TEACHER :Answer: people choose to volunteer because they want money, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 7, Machine Learnable: false, aid: 597393ad86c7782700f80707
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + choose
ANALYZER :::: spelling fixed: choose >> need
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people need to volunteer because they want money $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: volunteer
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: want
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: money
ANALYZER :::: Teacher parts: NOUN
----starting new check-----
GETGRADE :::: TEACHER :Answer: people need to volunteer because they want money, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 7, Machine Learnable: false, aid: 5973956986c77804c848a0c1
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking need people
ANALYZER :::: checking need need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need need
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to need
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking to volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: to + volunteer
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking to want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: to + want
ANALYZER :::: checking to money
ANALYZER :::: trick loop: help + money
ANALYZER :::: not equal tokens: to + money
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: trick try: help + choose
ANALYZER :::: not equal tokens: help + choose
ANALYZER :::: checking people choose
ANALYZER :::: trick loop: need + choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: not equal tokens: people + choose
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people volunteer
ANALYZER :::: trick loop: need + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: people + volunteer
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: need + want
ANALYZER :::: spelling fixed: want >> need
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people choose to volunteer because they need money $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: choose
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: volunteer
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: money
ANALYZER :::: Teacher parts: NOUN
----starting new check-----
GETGRADE :::: TEACHER :Answer: people choose to volunteer because they need money, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 7, Machine Learnable: false, aid: 5973956a86c77804c848a0c2
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + choose
ANALYZER :::: spelling fixed: choose >> need
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people need to volunteer because they need money $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: volunteer
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: money
ANALYZER :::: Teacher parts: NOUN
----starting new check-----
GETGRADE :::: TEACHER :Answer: people need to volunteer because they need money, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 7, Machine Learnable: false, aid: 5973956a86c77804c848a0c3
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking need people
ANALYZER :::: checking need need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need need
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to need
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking to volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: to + volunteer
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking to need
ANALYZER :::: trick loop: help + need
ANALYZER :::: not equal tokens: to + need
ANALYZER :::: checking to money
ANALYZER :::: trick loop: help + money
ANALYZER :::: not equal tokens: to + money
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: trick try: help + choose
ANALYZER :::: not equal tokens: help + choose
ANALYZER :::: checking people choose
ANALYZER :::: trick loop: need + choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: not equal tokens: people + choose
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people volunteer
ANALYZER :::: trick loop: need + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: people + volunteer
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people they
ANALYZER :::: grade: 1
ANALYZER :::: checking need people
ANALYZER :::: trick loop: to + people
ANALYZER :::: trick loop: help + people
ANALYZER :::: trick try: help + people
ANALYZER :::: not equal tokens: help + people
ANALYZER :::: checking need choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: trick try: help + choose
ANALYZER :::: not equal tokens: help + choose
ANALYZER :::: checking need to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: trick try: help + to
ANALYZER :::: not equal tokens: help + to
ANALYZER :::: checking need volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: trick try: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking need they
ANALYZER :::: checking need need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need need
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: trick loop: help + people
ANALYZER :::: not equal tokens: to + people
ANALYZER :::: checking to choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: not equal tokens: to + choose
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking to volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: to + volunteer
ANALYZER :::: checking to they
ANALYZER :::: checking to need
ANALYZER :::: checking to money
ANALYZER :::: trick loop: help + money
ANALYZER :::: not equal tokens: to + money
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: trick try: help + want
ANALYZER :::: spelling fixed: want >> help
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people choose to volunteer because they help money $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: choose
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: volunteer
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: money
ANALYZER :::: Teacher parts: NOUN
----starting new check-----
GETGRADE :::: TEACHER :Answer: people choose to volunteer because they help money, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 7, Machine Learnable: false, aid: 5973956b86c77804c848a0c4
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + choose
ANALYZER :::: spelling fixed: choose >> need
$$$$$$$$$$$$$$$$$$$$$$$$$$$ people need to volunteer because they help money $$ google api
ANALYZER :::: Teacher parts: people
ANALYZER :::: Teacher parts: NOUN
ANALYZER :::: Teacher parts: need
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: to
ANALYZER :::: Teacher parts: PRT
ANALYZER :::: Teacher parts: volunteer
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: they
ANALYZER :::: Teacher parts: PRON
ANALYZER :::: Teacher parts: help
ANALYZER :::: Teacher parts: VERB
ANALYZER :::: Teacher parts: money
ANALYZER :::: Teacher parts: NOUN
----starting new check-----
GETGRADE :::: TEACHER :Answer: people need to volunteer because they help money, Wrriten by: COMPUTER, Grade: -1, Verified by Teacher: false, Significant Words: 7, Machine Learnable: false, aid: 5973956c86c77804c848a0c5
GETGRADE :::: STUDENT :Answer: because people need to help, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: true, Significant Words: 4, Machine Learnable: true, aid: 5973936186c7782700f806fa
ANALYZER :::: TEACHER SIDE!!!!!!!!!!!!!!!!!
ANALYZER :::: checking people people
ANALYZER :::: passed checkTokens V people + people
ANALYZER :::: passed checkParts V people + people
ANALYZER :::: passed checkRelationToParent V people + people
ANALYZER :::: equal tokens: people + people
ANALYZER :::: there are fathers: need + need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: people people
ANALYZER :::: grade: 1
ANALYZER :::: checking need people
ANALYZER :::: checking need need
ANALYZER :::: passed checkTokens V need + need
ANALYZER :::: passed checkParts V need + need
ANALYZER :::: passed checkRelationToParent V need + need
ANALYZER :::: equal tokens: need + need
ANALYZER :::: no father... bye
ANALYZER :::: finished path check, equal: need need
ANALYZER :::: grade: 2
ANALYZER :::: checking to people
ANALYZER :::: checking to need
ANALYZER :::: checking to to
ANALYZER :::: passed checkTokens V to + to
ANALYZER :::: passed checkParts V to + to
ANALYZER :::: passed checkRelationToParent V to + to
ANALYZER :::: equal tokens: to + to
ANALYZER :::: there are fathers: help + volunteer
ANALYZER :::: not equal tokens: help + volunteer
ANALYZER :::: checking to volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: to + volunteer
ANALYZER :::: checking to they
ANALYZER :::: trick loop: help + they
ANALYZER :::: not equal tokens: to + they
ANALYZER :::: checking to help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: to + help
ANALYZER :::: checking to money
ANALYZER :::: trick loop: help + money
ANALYZER :::: not equal tokens: to + money
ANALYZER :::: finished path check, BREAK!: to
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: trick try: help + choose
ANALYZER :::: not equal tokens: help + choose
ANALYZER :::: checking people choose
ANALYZER :::: trick loop: need + choose
ANALYZER :::: trick loop: to + choose
ANALYZER :::: trick loop: help + choose
ANALYZER :::: not equal tokens: people + choose
ANALYZER :::: checking people to
ANALYZER :::: trick loop: need + to
ANALYZER :::: trick loop: to + to
ANALYZER :::: trick loop: help + to
ANALYZER :::: not equal tokens: people + to
ANALYZER :::: checking people volunteer
ANALYZER :::: trick loop: need + volunteer
ANALYZER :::: trick loop: to + volunteer
ANALYZER :::: trick loop: help + volunteer
ANALYZER :::: not equal tokens: people + volunteer
ANALYZER :::: checking people they
ANALYZER :::: special case1 V people + they
ANALYZER :::: equal tokens: people + they
ANALYZER :::: there are fathers: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: trick try: help + help
ANALYZER :::: passed checkTokens V help + help
ANALYZER :::: passed checkParts V help + help
ANALYZER :::: not equal tokens: help + help
ANALYZER :::: checking people help
ANALYZER :::: trick loop: need + help
ANALYZER :::: trick loop: to + help
ANALYZER :::: trick loop: help + help
ANALYZER :::: not equal tokens: people + help
ANALYZER :::: checking people money
ANALYZER :::: trick loop: need + money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: help + money
ANALYZER :::: not equal tokens: people + money
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
----finished new check-----
ANALYZER :::: not equal tokens: help + want
ANALYZER :::: checking people want
ANALYZER :::: trick loop: need + want
ANALYZER :::: trick loop: to + want
ANALYZER :::: trick loop: help + want
ANALYZER :::: not equal tokens: people + want
ANALYZER :::: checking people money
ANALYZER :::: trick loop: need + money
ANALYZER :::: trick loop: to + money
ANALYZER :::: trick loop: help + money
ANALYZER :::: not equal tokens: people + money
ANALYZER :::: finished path check, BREAK!: people
ANALYZER :::: grade: 0
### SYNTAX ANALYZER RESULT:
### student: Answer: people choose to volunteer because they want money, Wrriten by: STUDENT, Grade: 0, Verified by Teacher: false, Significant Words: 7, Machine Learnable: false, aid: 597393ad86c7782700f80707
### grade: 0
